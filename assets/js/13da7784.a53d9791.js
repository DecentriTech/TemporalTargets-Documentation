"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6464],{3945:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"API/Core Gameplay Logic/TemporalCharacter","title":"\ud83d\udcc4 File: TemporalCharacter.h","description":"Defines the ghost character class responsible for replaying recorded gameplay.","source":"@site/docs/API/Core Gameplay Logic/TemporalCharacter.md","sourceDirName":"API/Core Gameplay Logic","slug":"/API/_temporal_character_8h","permalink":"/TemporalTargets-Documentation/docs/API/_temporal_character_8h","draft":false,"unlisted":false,"editUrl":"https://github.com/DecentriTech/TemporalTargets-Documentation/tree/main/website/docs/API/Core Gameplay Logic/TemporalCharacter.md","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udcc4 File: TemporalCharacter.h","slug":"/API/_temporal_character_8h"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcc4 File: TemporalAIController.h","permalink":"/TemporalTargets-Documentation/docs/API/_temporal_a_i_controller_8h"},"next":{"title":"\ud83d\udcc4 File: TemporalGameMode.h","permalink":"/TemporalTargets-Documentation/docs/API/_temporal_game_mode_8h"}}');var s=a(4848),t=a(8453);const i={title:"\ud83d\udcc4 File: TemporalCharacter.h",slug:"/API/_temporal_character_8h"},l="\ud83d\udcc4 File: TemporalCharacter.h",c={},o=[];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components},{Details:a,ExpandableCodeBlock:r}=n;return a||h("Details",!0),r||h("ExpandableCodeBlock",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"-file-temporalcharacterh",children:["\ud83d\udcc4 File: ",(0,s.jsx)(n.code,{children:"TemporalCharacter.h"})]})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Defines the ghost character class responsible for replaying recorded gameplay."}),"\n"]}),"\n",(0,s.jsxs)(a,{open:!0,children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)("summary",{children:"\ud83d\udcdd Detailed Description"}),"\r\nThis file declares the ",(0,s.jsx)(n.a,{href:"#class_a_temporal_character",children:"ATemporalCharacter"})," class, which:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Plays back recorded frames from a prior player session."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Interpolates movement and rotation based on frame data."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Binds replay action flags (e.g., Jumped, FiredWeapon) to delegate handlers."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Provides Blueprint APIs to query and control playback."}),"\n"]}),"\n"]}),(0,s.jsxs)(n.p,{children:["It also defines the ",(0,s.jsx)(n.a,{href:"#struct_f_replay_handler_entry",children:"FReplayHandlerEntry"})," structure and related macros used to dispatch frame-based events efficiently."]}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"#group___game___logic",children:"Core Gameplay Logic"})})]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,s.jsx)(n.code,{children:"FReplayHandlerEntry"}),"\r\n",(0,s.jsxs)("span",{class:"brief-description-pill",children:["Maps an ",(0,s.jsx)(n.a,{href:"#group___replay___data_1ga634bef419b6cd1967d4f0b1e39282e91",children:"EReplayActionFlags"})," bit to its C++ handler delegate."]})]})}),(0,s.jsxs)(a,{open:!0,children:[(0,s.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,s.jsx)(a,{open:!0,children:(0,s.jsx)("summary",{children:"\u2699\ufe0f Functions"})}),(0,s.jsxs)(a,{open:!0,children:[(0,s.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"Flag"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Which action flag to match."})]})}),(0,s.jsx)("p",{children:"Which action flag to match."})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"Handler"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Delegate to call when this flag is set."})]})}),(0,s.jsx)("p",{children:"Delegate to call when this flag is set."})]})]})]})]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,s.jsx)(n.code,{children:"ATemporalCharacter"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Ghost pawn that replays a player's recorded gameplay."})]})}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#class_a_temporal_character",children:"ATemporalCharacter"})," streams back recorded ",(0,s.jsx)(n.a,{href:"#struct_f_player_frame_data",children:"FPlayerFrameData"})," frames, interpolating position, rotation, and velocity. It binds replay events (jump, fire, interact) to C++ handler methods, and exposes Blueprint-callable APIs for controlling replay (reset, query frames)."]}),"\n"]}),(0,s.jsxs)(a,{open:!0,children:[(0,s.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,s.jsxs)(a,{open:!0,children:[(0,s.jsx)("summary",{children:"\u2699\ufe0f Functions"}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"ATemporalCharacter"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Constructor: sets up default tick and playback variables."})]})}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Parameters:"})," None"]}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 17\u201357)"]}),(0,s.jsx)(r,{code:"ATemporalCharacter::ATemporalCharacter()\n{\nPrimaryActorTick.bCanEverTick = true;\nPlaybackTime = 0.0f;\n\n// Initialize shared pointer to nullptr\nReplayDataPtr = nullptr;\n\n// Set up the event handlers map.\n// For each replay action flag, bind the default C++ function.\n// You can override these by implementing the Blueprint events (OnGhostJump, OnGhostShoot) if needed.\n//ReplayEventHandlers.Add(EReplayActionFlags::Jumped, FReplayEventDelegate::CreateUObject(this, &ATemporalCharacter::ProcessJumpEvent));\n//ReplayEventHandlers.Add(EReplayActionFlags::FiredWeapon, FReplayEventDelegate::CreateUObject(this, &ATemporalCharacter::ProcessShootEvent));\n\n// Automatically bind replay events using the macro list.\n  #define X(Flag, Func) \\\n      ReplayEventHandlers.Add(FReplayHandlerEntry{ EReplayActionFlags::Flag, FReplayEventDelegate::CreateUObject(this, &ATemporalCharacter::Func) });\n  REPLAY_EVENT_LIST\n  #undef X\n\n  UCharacterMovementComponent* Movement = GetCharacterMovement();\n  if (Movement)\n  {\n      // Set these to high values so that the velocity change is nearly instantaneous.\n      Movement->bUseControllerDesiredRotation = false;\n      Movement->MaxAcceleration = BIG_NUMBER;\n      Movement->BrakingDecelerationWalking = 0.f;\n      Movement->GroundFriction = 0.f;\n\n      // Optionally, ensure the ghost is in the walking mode.\n      Movement->SetMovementMode(MOVE_Falling);\n\n      // You may also want to set MaxWalkSpeed to a sufficiently high value.\n      Movement->MaxWalkSpeed = 10000.f;\n\tMovement->MaxFlySpeed = 10000.f;\n  }\n\n}",language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"~ATemporalCharacter"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Destructor: cleans up playback state."})]})}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Parameters:"})," None"]}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 59\u201362)"]}),(0,s.jsx)(r,{code:"ATemporalCharacter::~ATemporalCharacter()\n{\n  PlaybackTime = 0.0f;\n}",language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"EndPlay"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Called when play ends or actor is destroyed."})]})}),(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Parameters:"})}),(0,s.jsx)("ul",{children:(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"const EEndPlayReason::Type EndPlayReason"})," \u2013 Reason the actor is ending play."]})}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 64\u201370)"]}),(0,s.jsx)(r,{code:"void ATemporalCharacter::EndPlay(const EEndPlayReason::Type EndPlayReason)\n{\nSuper::EndPlay(EndPlayReason);\n\n  ReplayEventHandlers.Reset();\n//ReplayDataPtr.Reset(); // No need to reset shared pointer, it will be cleaned up automatically.\n}",language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"Tick"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Called once per frame to advance playback."})]})}),(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Parameters:"})}),(0,s.jsx)("ul",{children:(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"float DeltaTime"})," \u2013 Time in seconds since last Tick."]})}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 91\u2013104)"]}),(0,s.jsx)(r,{code:'void ATemporalCharacter::Tick(float DeltaTime)\n{\nSuper::Tick(DeltaTime);\n\n// **Ensure replay data is valid before processing**\nif (!ReplayDataPtr.IsValid() || ReplayDataPtr->Num() == 0)\n{\n\tUE_LOG(LogTemp, Warning, TEXT("%s - ReplayDataPtr is invalid!"), *GetName());\n\treturn;\n}\n\nPlaybackTime += DeltaTime;\nUpdatePlayback(DeltaTime); \n}',language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"InitializeGhostPlayback"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Initialize ghost playback with a shared pointer to frame data."})]})}),(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Parameters:"})}),(0,s.jsx)("ul",{children:(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"TSharedPtr< TArray<  > > InReplayDataPtr"})," \u2013 Shared pointer to an array of ."]})}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 106\u2013190)"]}),(0,s.jsx)(r,{code:'void ATemporalCharacter::InitializeGhostPlayback(TSharedPtr<TArray<FPlayerFrameData>> InReplayDataPtr)\n{\nif (!InReplayDataPtr.IsValid() || InReplayDataPtr->Num() == 0)\n{\n\tUE_LOG(LogTemp, Warning, TEXT("%s - Received invalid or empty replay data!"), *GetName());\n\treturn;\n}\n\n// Assign new shared pointer (NO COPY)\nReplayDataPtr = InReplayDataPtr;\nPlaybackTime = 0.0f;\n\n  // ---------------------------------------------------------------\n  //  Walk every frame & shot once, load unique WeaponUsed\n  // ---------------------------------------------------------------\n  CachedWeapons.Empty();\n\n  for (const FPlayerFrameData& Frame : *ReplayDataPtr)\n  {\n      for (const FRecordedShot& Shot : Frame.CombatData.Shots)\n      {\n          if (!Shot.WeaponUsed.IsNull())\n          {\n              const FSoftObjectPath Path = Shot.WeaponUsed.ToSoftObjectPath();\n              if (!CachedWeapons.Contains(Path))               // load only once\n              {\n                  UWeaponDataAsset* Loaded = Shot.WeaponUsed.LoadSynchronous();\n                  if (Loaded)\n                  {\n                      CachedWeapons.Add(Path, Loaded);\n                  }\n                  else\n                  {\n                      UE_LOG(LogTemp, Warning,\n                          TEXT("%s \u2013 failed to stream weapon asset %s"),\n                          *GetName(), *Path.ToString());\n                  }\n              }\n          }\n      }\n  }\n\n  UE_LOG(LogTemp, Log, TEXT("%s \u2013 Weapon cache built with %d unique assets"),\n      *GetName(), CachedWeapons.Num());\n\n// Log memory details for this ghost\nUE_LOG(LogTemp, Warning, TEXT("%s - Ghost initialized with %d frames. Memory Address: %p"),\n\t*GetName(), ReplayDataPtr->Num(), ReplayDataPtr.Get());\n\n// Ensure timestamps are normalized\nfloat FirstFrameTime = (*ReplayDataPtr)[0].TimeStamp;\nfor (FPlayerFrameData& Frame : *ReplayDataPtr)\n{\n\tFrame.TimeStamp -= FirstFrameTime;\n}\n\n// Set initial position and rotation\nSetActorLocation((*ReplayDataPtr)[0].Position);\nSetActorRotation((*ReplayDataPtr)[0].Rotation);\n\nUE_LOG(LogTemp, Log, TEXT("%s - Initialized with %d frames."), *GetName(), ReplayDataPtr->Num());\n\n  // --- NEW: turn off all the inherited player components ---\n\n  if (InteractionComponent)\n  {\n      InteractionComponent->Deactivate();\n      InteractionComponent->SetComponentTickEnabled(false);\n  }\n  if (ReplayRecorder)\n  {\n      ReplayRecorder->Deactivate();\n      ReplayRecorder->SetComponentTickEnabled(false);\n  }\n  if (WeaponComponent)\n  {\n      WeaponComponent->Deactivate();\n      WeaponComponent->SetComponentTickEnabled(false);\n  }\n  if (WeaponInventoryComponent)\n  {\n      WeaponInventoryComponent->Deactivate();\n      WeaponInventoryComponent->SetComponentTickEnabled(false);\n  }\n}',language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"GetRecordedFrames"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Retrieve the full list of recorded frames."})]})}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Parameters:"})," None"]}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 192\u2013195)"]}),(0,s.jsx)(r,{code:"const TArray<FPlayerFrameData>& ATemporalCharacter::GetRecordedFrames() const\n{\n  return ReplayData;\n}",language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"ResetPlayback"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Reset playback timer and teleport ghost to first frame."})]})}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Parameters:"})," None"]}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 197\u2013205)"]}),(0,s.jsx)(r,{code:"void ATemporalCharacter::ResetPlayback()\n{\nPlaybackTime = 0.0f;\nif (ReplayDataPtr.IsValid() && ReplayDataPtr->Num() > 0)\n{\n\tSetActorLocation((*ReplayDataPtr)[0].Position);\n\tSetActorRotation((*ReplayDataPtr)[0].Rotation);\n}\n}",language:"cpp",previewLines:15})]}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"BeginPlay"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Called when the game starts or actor is spawned."})]})}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Parameters:"})," None"]}),(0,s.jsx)("hr",{}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,s.jsx)("code",{children:"Source/TimeAssassin/TemporalCharacter.cpp"})," (lines 72\u201389)"]}),(0,s.jsx)(r,{code:'void ATemporalCharacter::BeginPlay()\n{\nSuper::BeginPlay();\n\n  Tags.AddUnique("Ghost");\n\n  LastGhostPosition = GetActorLocation();\n  // Optionally clear or precompute CumulativeDistances here.\n  CumulativeDistances.Empty();\n\n  if (ATemporalGameMode* GM = Cast<ATemporalGameMode>(UGameplayStatics::GetGameMode(this)))\n  {\n      if (!GhostID.IsNone())\n      {\n          GM->RegisterGhost(GhostID, this);\n      }\n  }\n}',language:"cpp",previewLines:15})]})]}),(0,s.jsxs)(a,{open:!0,children:[(0,s.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:(0,s.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,s.jsx)("code",{children:"GhostID"}),"\r\n",(0,s.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,s.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,s.jsx)("span",{class:"brief-description-pill",children:"Unique identifier for this ghost instance."})]})}),(0,s.jsx)("p",{children:"Unique identifier for this ghost instance."})]})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var r=a(6540);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);