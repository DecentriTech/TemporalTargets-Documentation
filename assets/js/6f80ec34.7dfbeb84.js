"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1314],{3685:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"API/User Interface Widgets and Interfaces/GridCanvasWidget","title":"\ud83d\udcc4 File: GridCanvasWidget.h","description":"Declares the interactive Slate-backed spray pattern editor widget.","source":"@site/docs/API/User Interface Widgets and Interfaces/GridCanvasWidget.md","sourceDirName":"API/User Interface Widgets and Interfaces","slug":"/API/_grid_canvas_widget_8h","permalink":"/TemporalTargets-Documentation/docs/API/_grid_canvas_widget_8h","draft":false,"unlisted":false,"editUrl":"https://github.com/DecentriTech/TemporalTargets-Documentation/tree/main/website/docs/API/User Interface Widgets and Interfaces/GridCanvasWidget.md","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udcc4 File: GridCanvasWidget.h","slug":"/API/_grid_canvas_widget_8h"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcc4 File: GameHUDWidget.h","permalink":"/TemporalTargets-Documentation/docs/API/_game_h_u_d_widget_8h"},"next":{"title":"\ud83d\udcc4 File: HitmarkerWidget.h","permalink":"/TemporalTargets-Documentation/docs/API/_hitmarker_widget_8h"}}');var r=s(4848),t=s(8453);const a={title:"\ud83d\udcc4 File: GridCanvasWidget.h",slug:"/API/_grid_canvas_widget_8h"},c="\ud83d\udcc4 File: GridCanvasWidget.h",d={},l=[];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components},{Details:s,ExpandableCodeBlock:i}=n;return s||h("Details",!0),i||h("ExpandableCodeBlock",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"-file-gridcanvaswidgeth",children:["\ud83d\udcc4 File: ",(0,r.jsx)(n.code,{children:"GridCanvasWidget.h"})]})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Declares the interactive Slate-backed spray pattern editor widget."}),"\n"]}),"\n",(0,r.jsxs)(s,{open:!0,children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)("summary",{children:"\ud83d\udcdd Detailed Description"}),"\r\nThis file defines the ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget",children:"UGridCanvasWidget"})," class and related types, used in designing and visualizing 2D recoil patterns. Features include:"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"An editable canvas for placing and modifying spray points."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Multiple edit modes via ",(0,r.jsx)(n.a,{href:"#group___u_i___widgets_1ga81e2f378ed72995ca43cc3deb13507cc",children:"ERecoilEditMode"})," (Point/Freehand)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Support for grid scaling, zooming, snapping, and panning."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Undo/redo functionality using ",(0,r.jsx)(n.a,{href:"#struct_f_pattern_snapshot",children:"FPatternSnapshot"})," snapshots."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Grid rendering, axis labeling, and HUD hint overlays."}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Also includes editor-callable export functionality to save the current pattern into a ",(0,r.jsx)(n.a,{href:"#class_u_weapon_data_asset",children:"UWeaponDataAsset"})," instance for use in gameplay."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"#group___u_i___widgets",children:"User Interface Widgets and Interfaces"})})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,r.jsx)(n.code,{children:"FPatternSnapshot"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Snapshot of spray-pattern points for undo/redo operations."})]})}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Stores a copy of the designer's input so that UndoStack/RedoStack can revert to previous states via RecordUndoSnapshot()."}),"\n"]}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\u2699\ufe0f Functions"}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"FPatternSnapshot"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Construct from a point list."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 67\u201369)"]}),(0,r.jsx)(i,{code:"    FPatternSnapshot(const TArray<FVector2D>& InPts)\n      : Points(InPts) {\n  }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"FPatternSnapshot"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Construct from a point list plus a preview point."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 72\u201374)"]}),(0,r.jsx)(i,{code:"    FPatternSnapshot(const TArray<FVector2D>& InPts, FVector2D InPreviewPoint)\n      : Points(InPts), PreviewPoint(InPreviewPoint) {\n  }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"FPatternSnapshot"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Default constructor for UE serialization."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]})]})]}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Points"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Sequence of 2D points representing the spray pattern."})]})}),(0,r.jsx)("p",{children:"Sequence of 2D points representing the spray pattern."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"PreviewPoint"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Preview point shown when hovering or last point added."})]})}),(0,r.jsx)("p",{children:"Preview point shown when hovering or last point added."})]})]})]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,r.jsx)(n.code,{children:"UGridCanvasWidget"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Slate-backed widget for authoring and previewing weapon spray patterns."})]})}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget",children:"UGridCanvasWidget"})," lets designers:"]}),"\n"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Zoom (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a8b294a32e146b92ece32f6ce8c0219d6",children:"Zoom"}),") and pan (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a40c73780a82afbbe153da653d5facac7",children:"PanOffset"}),") over a 2D grid."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Switch edit modes via ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1ad20f17a7516276cf07f75ceb4d0b68e9",children:"ToggleEditMode()"})," between ERecoilEditMode::Point and ERecoilEditMode::Freehand."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add, clear, scale (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a277980892f05df5ed7fe46dc96ad3ddd",children:"ScaleSprayPatternUniform()"}),", ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a5a7bdf5d7870a0a87d9b45cab83526e2",children:"ScaleSprayPattern()"}),") and export (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a53a019ebb3c0d5ac9d8ea09e1b7fbe44",children:"ExportSprayPattern()"}),") spray points."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Undo/redo strokes with ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a9a07dfe3f2d4ce2bb4eb46204d4ba9a3",children:"Undo()"}),", ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a94b56c765eaf5fa15566118b52d3ecf1",children:"Redo()"}),", backed by ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a4846065e699258f2529fc2bd1fb830e6",children:"UndoStack"})," / ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1aee5d312aa51f0694e52f8ed47a364c44",children:"RedoStack"})," and helper ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a014eef438b321834225cc24ab83a8708",children:"RecordUndoSnapshot()"}),"."]}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Internally uses nested ",(0,r.jsx)(n.a,{href:"#struct_u_grid_canvas_widget_1_1_f_grid_params",children:"FGridParams"})," and ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1ac57384fa5f8227744bffc1cb1ee7465d",children:"NativePaint()"})," to draw:"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Major/minor grid lines (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1aea903413f50eabd54387ab5f0c85ce13",children:"DrawGrid()"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Origin crosshair (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a4107170129374db71e599de859e53942",children:"DrawOriginCrosshair()"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Axis labels (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a96bd4b8913fb555cf3757ad3683e03f1",children:"DrawAxisLabels()"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Live preview lines and pattern points (",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1ae32d3546ec59577d71780cf9596e063a",children:"DrawSprayPattern()"}),", ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1ad8a1b003a01c4d0c67b840507f66b91f",children:"DrawPreviewPoint()"}),")."]}),"\n"]}),"\n"]}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\u2699\ufe0f Functions"}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"UGridCanvasWidget"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Constructor-sets the widget to be focusable."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 110\u2013114)"]}),(0,r.jsx)(i,{code:"UGridCanvasWidget::UGridCanvasWidget(const FObjectInitializer& ObjectInitializer)\n: Super(ObjectInitializer)\n{\nSetIsFocusable(true);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SetSprayPoints"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Replace the current spray points."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"const TArray< FVector2D > & NewPoints"})," \u2013 The new point sequence to edit."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 142\u2013155)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::SetSprayPoints(const TArray<FVector2D>& NewPoints)\n{\nSprayPoints = NewPoints;\nBaselineSprayPoints = SprayPoints;\n\nif (SprayPoints.Num())\n{\n\tPreviewPoint = SprayPoints.Last();\n\tbHasPreviewPoint = true;\n}\nelse bHasPreviewPoint = false;\n\nInvalidate(EInvalidateWidget::LayoutAndVolatility);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ScaleSprayPatternUniform"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Scale the pattern uniformly."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"float Multiplier"})," \u2013 Uniform scale factor for X and Y."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 173\u2013176)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::ScaleSprayPatternUniform(float Mul)\n{\nScaleSprayPattern(Mul, Mul);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ScaleSprayPattern"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Scale the pattern non-uniformly."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"float XMultiplier"})," \u2013 Scale factor in X."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"float YMultiplier"})," \u2013 Scale factor in Y."]})]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 157\u2013171)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::ScaleSprayPattern(float XMul, float YMul)\n{\nif (!BaselineSprayPoints.Num()) return;\n\nRecordUndoSnapshot();\n\nSprayPoints.Empty(BaselineSprayPoints.Num());\nfor (const FVector2D& Pt : BaselineSprayPoints)\n\tSprayPoints.Add({ Pt.X * XMul, Pt.Y * YMul });\n\nPreviewPoint = SprayPoints.Last();\nbHasPreviewPoint = true;\n\nInvalidate(EInvalidateWidget::LayoutAndVolatility);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"GetSprayPatternPoints"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Get a read-only reference to the current spray points."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 156\u2013156)"]}),(0,r.jsx)(i,{code:"    const TArray<FVector2D>& GetSprayPatternPoints() const { return SprayPoints; }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ExportSprayPattern"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Export the current spray pattern to a weapon asset."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"* TargetWeapon"})," \u2013 The weapon data asset to receive the pattern."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 238\u2013262)"]}),(0,r.jsx)(i,{code:'void UGridCanvasWidget::ExportSprayPattern(UWeaponDataAsset* TargetWeapon)\n{\nif (!TargetWeapon)\n{\n\tUE_LOG(LogTemp, Error, TEXT("[ExportSprayPattern] Null TargetWeapon passed in."));\n\treturn;\n}\n\nUE_LOG(LogTemp, Log, TEXT("[ExportSprayPattern] Setting SprayPattern for %s. Num points: %d"),\n\t*TargetWeapon->GetName(), SprayPoints.Num());\n\nTArray<FVector2D> Ordered = SprayPoints;\nOrdered.Sort([](const FVector2D& A, const FVector2D& B)\n\t{\n\t\treturn A.Y < B.Y;\n\t});\n\nTargetWeapon->SprayPattern = Ordered;\n\nTargetWeapon->Modify(); // For undo support\nTargetWeapon->MarkPackageDirty(); // Mark the asset dirty for saving\n\nUE_LOG(LogTemp, Log, TEXT("Exported %d spray points to weapon: %s"), Ordered.Num(), *TargetWeapon->GetName());\n\n}',language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"AddPoint"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Add a point at the given world position."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 178\u2013208)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::AddPoint(const FVector2D& Point)\n{\nRecordUndoSnapshot();\n\nif (SelectedWeapon && SprayPoints.Num() >= SelectedWeapon->MagSize) return;\n\nFVector2D P = Point;\n\n// designer wants the top of the graph clamped to Y == 0\nif (P.Y > -10.f && P.Y < 0.f)   P.Y = 0.f;\nif (P.Y < -10.f)                return;\n\nif (bSnapToGrid && SnapInterval > 0.f)\n{\n\tP.X = FMath::RoundToFloat(P.X / SnapInterval) * SnapInterval;\n\tP.Y = FMath::RoundToFloat(P.Y / SnapInterval) * SnapInterval;\n}\n\n// avoid duplicates\nfor (const FVector2D& Existing : SprayPoints)\n\tif (FVector2D::Distance(Existing, P) <= KINDA_SMALL_NUMBER)\n\t{\n\t\tPreviewPoint = Existing;\n\t\tbHasPreviewPoint = true;\n\t\treturn;\n\t}\n\nSprayPoints.Add(P);\nPreviewPoint = P;\nbHasPreviewPoint = true;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ClearPoints"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Clear all spray points."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 210\u2013215)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::ClearPoints()\n{\nRecordUndoSnapshot();\nSprayPoints.Empty();\nbHasPreviewPoint = false;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SetHoverPoint"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Update the hover preview point."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 217\u2013221)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::SetHoverPoint(const FVector2D& Point)\n{\nHoverPoint = Point;\nbHasHoverPoint = true;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"GetPreviewPoint"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Retrieve the current preview point if any."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 228\u2013236)"]}),(0,r.jsx)(i,{code:"bool UGridCanvasWidget::GetPreviewPoint(FVector2D& OutPoint) const\n{\nif (bHasPreviewPoint)\n{\n\tOutPoint = PreviewPoint;\n\treturn true;\n}\nreturn false;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SetWeaponData"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Associate this widget with a weapon data asset."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 223\u2013226)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::SetWeaponData(UWeaponDataAsset* NewWeaponData)\n{\nSelectedWeapon = NewWeaponData;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SetEditMode"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Set the editing mode (Point vs Freehand)."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 192\u2013192)"]}),(0,r.jsx)(i,{code:"    void SetEditMode(ERecoilEditMode NewMode) { EditMode = NewMode; }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ToggleEditMode"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Toggle between Point and Freehand edit modes."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 265\u2013277)"]}),(0,r.jsx)(i,{code:'void UGridCanvasWidget::ToggleEditMode()\n{\nif (EditMode == ERecoilEditMode::Point)\n{\n\tSetEditMode(ERecoilEditMode::Freehand);\n\tUE_LOG(LogTemp, Log, TEXT("Switched to Freehand Edit Mode"));\n}\nelse\n{\n\tSetEditMode(ERecoilEditMode::Point);\n\tUE_LOG(LogTemp, Log, TEXT("Switched to Point Edit Mode"));\n}\n}',language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Undo"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Undo the last pattern change, if any."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 279\u2013288)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::Undo()\n{\nif (!CanUndo()) return;\nRedoStack.Emplace(SprayPoints, PreviewPoint);\t// Save current Redo\nSprayPoints = MoveTemp(UndoStack.Last().Points); // Grab Last Points\nPreviewPoint = UndoStack.Last().PreviewPoint; // Restore preview point\nUndoStack.Pop();\nBaselineSprayPoints = SprayPoints;\nInvalidate(EInvalidateWidget::LayoutAndVolatility);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Redo"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Redo the last undone pattern change, if any."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 290\u2013299)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::Redo()\n{\nif (!CanRedo()) return;\nUndoStack.Emplace(SprayPoints, PreviewPoint);\nSprayPoints = MoveTemp(RedoStack.Last().Points);\nPreviewPoint = RedoStack.Last().PreviewPoint;\nRedoStack.Pop();\nBaselineSprayPoints = SprayPoints;\nInvalidate(EInvalidateWidget::LayoutAndVolatility);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"CanUndo"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Returns true if an undo is possible."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 210\u2013210)"]}),(0,r.jsx)(i,{code:"    bool CanUndo() const { return UndoStack.Num() > 0; }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"CanRedo"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Returns true if a redo is possible."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.h"})," (lines 214\u2013214)"]}),(0,r.jsx)(i,{code:"    bool CanRedo() const { return RedoStack.Num() > 0; }",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeConstruct"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 116\u2013120)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::NativeConstruct()\n{\nSuper::NativeConstruct();\n\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeTick"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 122\u2013135)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::NativeTick(const FGeometry& MyGeometry, float InDeltaTime)\n{\nSuper::NativeTick(MyGeometry, InDeltaTime);\n\n// one-shot auto-fit when widget receives first valid size\nif (!bDidInitialSetup && MyGeometry.GetLocalSize().X > 0.f)\n{\n\tconst FVector2D Size = MyGeometry.GetLocalSize();\n\tZoom = Size.X / (XAxisRange * 2.f);\n\tPanOffset = { Size.X / 2.f, 30.f };   // origin centred, Y-space for labels\n\tAddPoint({ 0,0 });\n\tbDidInitialSetup = true;\n}\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativePaint"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 302\u2013344)"]}),(0,r.jsx)(i,{code:'int32 UGridCanvasWidget::NativePaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry,\nconst FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements,\nint32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled) const\n{\nSuper::NativePaint(Args, AllottedGeometry, MyCullingRect, OutDrawElements, LayerId, InWidgetStyle, bParentEnabled);\n\n// 1) Push one clip for the whole widget\nconst FSlateRect ClipRect = AllottedGeometry.GetLayoutBoundingRect();\nconst FSlateClippingZone ClippingZone(ClipRect);\nOutDrawElements.PushClip(ClippingZone);\n\n// 1) gather all the numbers your grid code needs\nconst FGridParams P = CalcGridParams(AllottedGeometry);\n\n// 2) draw the grid lines (minor/major, tick at Y=0)\nDrawGrid(AllottedGeometry, OutDrawElements, LayerId, P);\n\n// 3) the origin crosshair (center dot + 4 ticks)\nDrawOriginCrosshair(AllottedGeometry, OutDrawElements, LayerId, P);\n\n// 4) axis labels (0 label, numeric Y left/right, numeric X top)\nDrawAxisLabels(AllottedGeometry, OutDrawElements, LayerId, P);\n\n// 5) little HUD hints ("<- LEFT" / "RIGHT ->")\nDrawHudHints(AllottedGeometry, OutDrawElements, LayerId);\n\n// 6) spray-pattern points + pulse + glow + index\nDrawSprayPattern(AllottedGeometry, OutDrawElements, LayerId);\n\n// 7) preview point rings + tooltip\nDrawPreviewPoint(AllottedGeometry, OutDrawElements, LayerId);\n\n// 8) live freehand ribbon if active\nif (EditMode == ERecoilEditMode::Freehand && bDrawingStroke && RawStroke.Num() > 1)\n{\n\tDrawFreehandPreview(OutDrawElements, LayerId, AllottedGeometry, MyCullingRect);\n}\n\n// 9) pop our clipping zone and return the new max layer\nOutDrawElements.PopClip();\nreturn LayerId + 13;\n}',language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnMouseButtonDown"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 346\u2013463)"]}),(0,r.jsx)(i,{code:'FReply UGridCanvasWidget::NativeOnMouseButtonDown(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)\n{\nUE_LOG(LogTemp, Log, TEXT("UGridCanvasWidget::NativeOnMouseButtonDown"));\n\n// Make sure the widget can receive keyboard input\nif (TSharedPtr<SWidget> MySlate = GetCachedWidget())\n{\n\tif (!FSlateApplication::Get().HasFocusedDescendants(MySlate.ToSharedRef()))\n\t{\n\t\tFSlateApplication::Get().SetKeyboardFocus(\n\t\t\tMySlate.ToSharedRef(),                // convert Ptr -> Ref\n\t\t\tEFocusCause::SetDirectly);\n\t}\n}\n\nconst FVector2D Local = InGeometry.AbsoluteToLocal(InMouseEvent.GetScreenSpacePosition());\nconst FVector2D Logical = (Local - PanOffset) / Zoom;\nconst float SnapRadius = 8.0f / Zoom;\nFVector2D FinalLogical = Logical;\n\nif (Logical.Y > -10.0f && Logical.Y < 0.0f)\n{\n\tFinalLogical.Y = 0.0f; // clamp to zero\n}\nelse if (Logical.Y < 0 && Logical.Y < -10.0f)\n{\n\treturn FReply::Handled(); // ignore points above Y=-10 \n}\n\nif (bSnapToGrid && SnapInterval > 0.0f)\n{\n\tFinalLogical.X = FMath::RoundToFloat(FinalLogical.X / SnapInterval) * SnapInterval;\n\tFinalLogical.Y = FMath::RoundToFloat(FinalLogical.Y / SnapInterval) * SnapInterval;\n}\n\nif (EditMode == ERecoilEditMode::Freehand && InMouseEvent.GetEffectingButton() == EKeys::LeftMouseButton)\n{\n\tRecordUndoSnapshot();\n\n\tRawStroke.Reset();\n\tRawStroke.Add(FinalLogical);\n\tbDrawingStroke = true;           // reuse existing flag to keep capture\n\treturn FReply::Handled().CaptureMouse(GetCachedWidget().ToSharedRef());\n}\n\nif (InMouseEvent.GetEffectingButton() == EKeys::LeftMouseButton)\n{\n\tif (InMouseEvent.IsShiftDown())\n\t{\n\t\tRecordUndoSnapshot();\n\n\t\tfor (int32 i = 0; i < SprayPoints.Num(); ++i)\n\t\t{\n\t\t\tif (FVector2D::Distance(SprayPoints[i], FinalLogical) <= SnapRadius)\n\t\t\t{\n\t\t\t\tDraggedPointIndex = i;\n\t\t\t\tPreviewPoint = SprayPoints[i];\n\t\t\t\tbDraggingPoint = true;\n\t\t\t\treturn FReply::Handled().CaptureMouse(GetCachedWidget().ToSharedRef());\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Normal add behavior\n\t\tfor (const FVector2D& Point : SprayPoints)\n\t\t{\n\t\t\tif (FVector2D::Distance(Point, Logical) <= SnapRadius)\n\t\t\t{\n\t\t\t\tRecordUndoSnapshot();\n\n\t\t\t\tPreviewPoint = Point;\n\t\t\t\tbHasPreviewPoint = true;\n\t\t\t\treturn FReply::Handled();\n\t\t\t}\n\t\t}\n\n\t\tAddPoint(Logical);\n\t\tbHasPreviewPoint = true;\n\t\treturn FReply::Handled();\n\t}\n}\n\nif (InMouseEvent.GetEffectingButton() == EKeys::RightMouseButton)\n{\n\n\tif (InMouseEvent.IsShiftDown())\n\t{\n\t\t// RMB (without SHIFT) = Delete\n\t\tfor (int32 i = 0; i < SprayPoints.Num(); ++i)\n\t\t{\n\t\t\tif (FVector2D::Distance(SprayPoints[i], FinalLogical) <= SnapRadius)\n\t\t\t{\n\t\t\t\tSprayPoints.RemoveAt(i);\n\t\t\t\tbHasPreviewPoint = false;\n\t\t\t\treturn FReply::Handled();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tbDragging = true;\n\t\tLastMousePosition = InMouseEvent.GetScreenSpacePosition();\n\t\treturn FReply::Handled().CaptureMouse(GetCachedWidget().ToSharedRef());\n\t}\n\n}\n\nreturn FReply::Unhandled();\n}',language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnMouseButtonUp"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 465\u2013503)"]}),(0,r.jsx)(i,{code:"FReply UGridCanvasWidget::NativeOnMouseButtonUp(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)\n{\nif (InMouseEvent.GetEffectingButton() == EKeys::LeftMouseButton && EditMode == ERecoilEditMode::Freehand && bDrawingStroke)\n{\n\n\tbDrawingStroke = false;\n\n\tconst int32 DesiredCount = GetDesiredShotCount();\n\n\tSprayPoints = ResampleStroke(DesiredCount);\n\tBaselineSprayPoints = SprayPoints;\n\n\tif (SprayPoints.Num())\n\t{\n\t\tPreviewPoint = SprayPoints.Last();\n\t\tbHasPreviewPoint = true;\n\t}\n\n\treturn FReply::Handled().ReleaseMouseCapture();\n}\n\nif (InMouseEvent.GetEffectingButton() == EKeys::LeftMouseButton)\n{\n\tif (bDraggingPoint)\n\t{\n\t\tbDraggingPoint = false;\n\t\tDraggedPointIndex = INDEX_NONE;\n\t\treturn FReply::Handled().ReleaseMouseCapture();\n\t}\n}\n\nif (InMouseEvent.GetEffectingButton() == EKeys::RightMouseButton)\n{\n\tbDragging = false;\n\treturn FReply::Handled().ReleaseMouseCapture();\n}\n\nreturn FReply::Unhandled();\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnMouseMove"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 505\u2013611)"]}),(0,r.jsx)(i,{code:"FReply UGridCanvasWidget::NativeOnMouseMove(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)\n{\n\n// Freehand drawing\nif (bDrawingStroke && EditMode == ERecoilEditMode::Freehand)\n{\n\tconst FVector2D Local = InGeometry.AbsoluteToLocal(\n\t\tInMouseEvent.GetScreenSpacePosition());\n\tFVector2D Logical = (Local - PanOffset) / Zoom;\n\n\t// snap / clamp\n\tif (bSnapToGrid && SnapInterval > 0.0f)\n\t{\n\t\tLogical.X = FMath::RoundToFloat(Logical.X / SnapInterval) * SnapInterval;\n\t\tLogical.Y = FMath::RoundToFloat(Logical.Y / SnapInterval) * SnapInterval;\n\t}\n\n\tif (Logical.Y > -10.0f && Logical.Y < 0.0f)\n\t{\n\t\tLogical.Y = 0.0f;\n\t}\n\telse if (Logical.Y < -10.0f)\n\t{\n\t\tLogical.Y = -10.0f;\n\t}\n\n\tif (ShouldStorePoint(RawStroke.Last(), Logical, 0.005 /**World Units Min Distance**/))\n\t{\n\t\tRawStroke.Add(Logical);\n\t\tPreviewPoint = Logical;\n\t\tbHasPreviewPoint = true;\n\t\tInvalidate(EInvalidateWidget::Layout);\n\t}\n\treturn FReply::Handled();\n}\n\nif (bDraggingPoint && DraggedPointIndex != INDEX_NONE)\n{\n\tconst FVector2D Local = InGeometry.AbsoluteToLocal(InMouseEvent.GetScreenSpacePosition());\n\tFVector2D NewLogical = (Local - PanOffset) / Zoom;\n\n\tif (bSnapToGrid && SnapInterval > 0.0f)\n\t{\n\t\tNewLogical.X = FMath::RoundToFloat(NewLogical.X / SnapInterval) * SnapInterval;\n\t\tNewLogical.Y = FMath::RoundToFloat(NewLogical.Y / SnapInterval) * SnapInterval;\n\t}\n\n\tif (NewLogical.Y > -10.0f && NewLogical.Y < 0.0f)\n\t{\n\t\tNewLogical.Y = 0.0f;\n\t}\n\telse if (NewLogical.Y < -10.0f)\n\t{\n\t\tNewLogical.Y = -10.0f;\n\t}\n\n\tSprayPoints[DraggedPointIndex] = NewLogical;\n\tPreviewPoint = NewLogical;\n\tbHasPreviewPoint = true;\n\n\treturn FReply::Handled();\n}\n\nif (bDragging)\n{\n\t// Set cursor while dragging\n\tif (APlayerController* PC = GetWorld()->GetFirstPlayerController())\n\t{\n\t\tPC->CurrentMouseCursor = EMouseCursor::GrabHand;\n\t}\n\n\tconst FVector2D Size = GetCachedGeometry().GetLocalSize();\n\tFVector2D Delta = InMouseEvent.GetScreenSpacePosition() - LastMousePosition;\n\tPanOffset += Delta;\n\n\tPanOffset.Y = FMath::Min(PanOffset.Y, 30.0f);\n\n\tfloat LeftWorldX = (-PanOffset.X) / Zoom;\n\tfloat RightWorldX = (Size.X - PanOffset.X) / Zoom;\n\n\tif (LeftWorldX < -XAxisRange)\n\t{\n\t\tPanOffset.X = -(-XAxisRange * Zoom);\n\t}\n\telse if (RightWorldX > XAxisRange)\n\t{\n\t\tPanOffset.X = Size.X - (XAxisRange * Zoom);\n\t}\n\n\tLastMousePosition = InMouseEvent.GetScreenSpacePosition();\n\treturn FReply::Handled();\n}\nelse\n{\n\t// Reset cursor when done dragging\n\tif (APlayerController* PC = GetWorld()->GetFirstPlayerController())\n\t{\n\t\tPC->CurrentMouseCursor = EMouseCursor::Default;\n\t}\n\n\treturn FReply::Handled().ReleaseMouseCapture();\n}\n\nreturn FReply::Unhandled();\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnMouseWheel"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 613\u2013657)"]}),(0,r.jsx)(i,{code:"FReply UGridCanvasWidget::NativeOnMouseWheel(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)\n{\n\nconst FVector2D Size = GetCachedGeometry().GetLocalSize();\n\nconst float ScrollDelta = InMouseEvent.GetWheelDelta();\nconst float ZoomFactor = FMath::Pow(1.1f, ScrollDelta);\nconst float NewUnclampedZoom = Zoom * ZoomFactor;\n\nconst float ScreenWidth = InGeometry.GetLocalSize().X;\nconst float MinAllowedZoom = ScreenWidth / (XAxisRange * 2.0f); // Don't allow zooming out past this\nconst float MaxAllowedZoom = MaxZoom; // Your defined zoom-in limit (e.g., 100)\n\nfloat NewZoom = FMath::Clamp(NewUnclampedZoom, MinAllowedZoom, MaxAllowedZoom);\n\n// Optional: Snap to min if close\nif (FMath::IsNearlyEqual(NewZoom, MinAllowedZoom, 0.01f))\n{\n\tNewZoom = MinAllowedZoom;\n}\n\n// Adjust PanOffset to zoom around mouse location\nconst FVector2D MouseLocal = InGeometry.AbsoluteToLocal(InMouseEvent.GetScreenSpacePosition());\nPanOffset = MouseLocal - ((MouseLocal - PanOffset) * (NewZoom / Zoom));\nZoom = NewZoom;\n\n// Compute world space positions of left/right edges\nfloat LeftWorldX = (-PanOffset.X) / Zoom;\nfloat RightWorldX = (Size.X - PanOffset.X) / Zoom;\n\n// Clamp to -XAxisRange and +XAxisRange\nif (LeftWorldX < -XAxisRange)\n{\n\tPanOffset.X = -(-XAxisRange * Zoom);\n}\nelse if (RightWorldX > XAxisRange)\n{\n\tPanOffset.X = Size.X - (XAxisRange * Zoom);\n}\n\n// Clamp vertical pan\nPanOffset.Y = FMath::Min(PanOffset.Y, 30.0f);\n\nreturn FReply::Handled();\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnKeyDown"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 659\u2013680)"]}),(0,r.jsx)(i,{code:"FReply UGridCanvasWidget::NativeOnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)\n{\nconst bool bCtrl = InKeyEvent.IsControlDown();\nconst bool bAlt = InKeyEvent.IsAltDown();\n\nif (bAlt)\n{\n\tToggleEditMode();\n}\n\nif (bCtrl && InKeyEvent.GetKey() == EKeys::Z)\n{\n\tUndo();\n\treturn FReply::Handled();\n}\nif (bCtrl && InKeyEvent.GetKey() == EKeys::Y)\n{\n\tRedo();\n\treturn FReply::Handled();\n}\nreturn Super::NativeOnKeyDown(MyGeometry, InKeyEvent);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"NativeOnMouseEnter"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/GridCanvasWidget.cpp"})," (lines 682\u2013694)"]}),(0,r.jsx)(i,{code:"void UGridCanvasWidget::NativeOnMouseEnter(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent)\n{\nSuper::NativeOnMouseEnter(InGeometry, InMouseEvent);\n\n// Force keyboard focus to this widget as soon as the mouse enters it\nif (TSharedPtr<SWidget> Slate = GetCachedWidget())\n{\n\tFSlateApplication::Get().SetKeyboardFocus(\n\t\tSlate.ToSharedRef(),\n\t\tEFocusCause::Mouse\n\t);\n}\n}",language:"cpp",previewLines:15})]})]}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Zoom"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Overall zoom factor in world units per pixel."})]})}),(0,r.jsx)("p",{children:"Overall zoom factor in world units per pixel."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"XAxisRange"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Horizontal range in world units on either side of origin."})]})}),(0,r.jsx)("p",{children:"Horizontal range in world units on either side of origin."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"PanOffset"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Pixel offset for panning the grid origin."})]})}),(0,r.jsx)("p",{children:"Pixel offset for panning the grid origin."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"MinZoom"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Minimum zoom when fitting to widget size."})]})}),(0,r.jsx)("p",{children:"Minimum zoom when fitting to widget size."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"MaxZoom"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Maximum zoom allowed by user."})]})}),(0,r.jsx)("p",{children:"Maximum zoom allowed by user."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"DefaultMagSize"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Default magazine size for pattern length if no weapon asset."})]})}),(0,r.jsx)("p",{children:"Default magazine size for pattern length if no weapon asset."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"EditMode"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Current edit mode (Point vs Freehand)."})]})}),(0,r.jsx)("p",{children:"Current edit mode (Point vs Freehand)."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SelectedWeapon"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Currently selected weapon asset for export."})]})}),(0,r.jsx)("p",{children:"Currently selected weapon asset for export."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"MajorLineColor"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Color of major grid lines in world units."})]})}),(0,r.jsx)("p",{children:"Color of major grid lines in world units."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"MinorLineColor"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Color of minor grid lines in world units."})]})}),(0,r.jsx)("p",{children:"Color of minor grid lines in world units."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"bSnapToGrid"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Snap points to a regular grid when adding."})]})}),(0,r.jsx)("p",{children:"Snap points to a regular grid when adding."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SnapInterval"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsxs)("span",{class:"brief-description-pill",children:["Interval size when ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a50a898f2741dfc0314582c7bf0bd0d18",children:"bSnapToGrid"})," is enabled."]})]})}),(0,r.jsxs)("p",{children:["Interval size when ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a50a898f2741dfc0314582c7bf0bd0d18",children:"bSnapToGrid"})," is enabled."]})]})]})]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,r.jsx)(n.code,{children:"UGridCanvasWidget::FGridParams"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Parameters computed for grid rendering."})]})}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Calculated in ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1a11eeb7716666f2401182caf03e728ffb",children:"CalcGridParams()"})," and used by ",(0,r.jsx)(n.a,{href:"#class_u_grid_canvas_widget_1ac57384fa5f8227744bffc1cb1ee7465d",children:"NativePaint()"})," helpers."]}),"\n"]}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,r.jsx)(s,{open:!0,children:(0,r.jsx)("summary",{children:"\u2699\ufe0f Functions"})}),(0,r.jsxs)(s,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Size"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Widget size in pixels."})]})}),(0,r.jsx)("p",{children:"Widget size in pixels."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"WorldTL"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"World-space top-left corner."})]})}),(0,r.jsx)("p",{children:"World-space top-left corner."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Step"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Major grid step."})]})}),(0,r.jsx)("p",{children:"Major grid step."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"SubStep"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Minor grid step."})]})}),(0,r.jsx)("p",{children:"Minor grid step."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"StartWorldX"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"First major line X."})]})}),(0,r.jsx)("p",{children:"First major line X."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"StartWorldY"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"First major line Y."})]})}),(0,r.jsx)("p",{children:"First major line Y."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"StartWorldXMinor"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"First minor line X."})]})}),(0,r.jsx)("p",{children:"First minor line X."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"StartWorldYMinor"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"First minor line Y."})]})}),(0,r.jsx)("p",{children:"First minor line Y."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"YZeroPx"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Screen Y of world Y==0."})]})}),(0,r.jsx)("p",{children:"Screen Y of world Y==0."})]}),(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"XZeroPx"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Screen X of world X==0."})]})}),(0,r.jsx)("p",{children:"Screen X of world X==0."})]})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);