"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3266],{1461:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"API/Modular Components/DamageableComponent","title":"\ud83d\udcc4 File: DamageableComponent.h","description":"Declares a modular health and damage component for actors.","source":"@site/docs/API/Modular Components/DamageableComponent.md","sourceDirName":"API/Modular Components","slug":"/API/_damageable_component_8h","permalink":"/TemporalTargets-Documentation/docs/API/_damageable_component_8h","draft":false,"unlisted":false,"editUrl":"https://github.com/DecentriTech/TemporalTargets-Documentation/tree/main/website/docs/API/Modular Components/DamageableComponent.md","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udcc4 File: DamageableComponent.h","slug":"/API/_damageable_component_8h"},"sidebar":"tutorialSidebar","previous":{"title":"Modular Components","permalink":"/TemporalTargets-Documentation/docs/API/Modular-Components"},"next":{"title":"\ud83d\udcc4 File: InteractionComponent.h","permalink":"/TemporalTargets-Documentation/docs/API/_interaction_component_8h"}}');var r=a(4848),i=a(8453);const l={title:"\ud83d\udcc4 File: DamageableComponent.h",slug:"/API/_damageable_component_8h"},c="\ud83d\udcc4 File: DamageableComponent.h",t={},d=[];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components},{Details:a,ExpandableCodeBlock:s}=n;return a||m("Details",!0),s||m("ExpandableCodeBlock",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"-file-damageablecomponenth",children:["\ud83d\udcc4 File: ",(0,r.jsx)(n.code,{children:"DamageableComponent.h"})]})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Declares a modular health and damage component for actors."}),"\n"]}),"\n",(0,r.jsxs)(a,{open:!0,children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)("summary",{children:"\ud83d\udcdd Detailed Description"}),"\r\nThis file defines the ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component",children:"UDamageableComponent"})," class and related types used to manage health, apply damage, and handle death events in a reusable way."]}),(0,r.jsx)(n.p,{children:"Key declarations:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"FDamageInfo: encapsulates context for damage events."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"UDamageableComponent: actor component for managing health and broadcasting damage/death."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"FOnDamageTakenSignature: delegate for notifying damage."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"FOnDeathSignature: delegate for notifying death."}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"#group___modular___components",children:"Modular Components"})})]}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,r.jsx)(n.code,{children:"FDamageInfo"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Context for a single damage event."})]})}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"@ ingroup Modular_Components"}),"\n"]}),(0,r.jsxs)(n.p,{children:["Carries details of a damage application: amount applied (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1a69348cf6516dc442d5a19748b19da88a",children:"DamageAmount"}),"), instigator actor (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1ac535336844d61222eff607949d15bbf3",children:"Instigator"}),"), impact location (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1ac1ca2da67c66980c6e84d0e2b17503db",children:"HitLocation"}),"), shot direction (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1af650a9a95ddd715cc637dda7986e42d3",children:"ShotDirection"}),"), damage type (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1a5b9dfd76d34f2f49ee518a06b2c2d66c",children:"DamageType"}),"), hit bone (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1a732a2ce7f76045a4c908517e287505b9",children:"HitBoneName"}),"), and any gameplay tags (",(0,r.jsx)(n.a,{href:"#struct_f_damage_info_1a7065ae4757d2317c59b998d4ec2afa1f",children:"DamageTags"}),")."]}),(0,r.jsxs)(a,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,r.jsx)(a,{open:!0,children:(0,r.jsx)("summary",{children:"\u2699\ufe0f Functions"})}),(0,r.jsxs)(a,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"DamageAmount"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Amount of health to subtract."})]})}),(0,r.jsx)("p",{children:"Amount of health to subtract."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Instigator"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Actor responsible for this damage."})]})}),(0,r.jsx)("p",{children:"Actor responsible for this damage."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"HitLocation"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"World position where the hit occurred."})]})}),(0,r.jsx)("p",{children:"World position where the hit occurred."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ShotDirection"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Direction of the incoming shot or attack."})]})}),(0,r.jsx)("p",{children:"Direction of the incoming shot or attack."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"DamageType"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Class of damage inflicted (e.g."})]})}),(0,r.jsx)("p",{children:"Class of damage inflicted (e.g."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"HitBoneName"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Name of the bone that was hit (if skeletal)."})]})}),(0,r.jsx)("p",{children:"Name of the bone that was hit (if skeletal)."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"DamageTags"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Applied gameplay tags (for special effects or rules)."})]})}),(0,r.jsx)("p",{children:"Applied gameplay tags (for special effects or rules)."})]})]})]})]}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 Class ",(0,r.jsx)(n.code,{children:"UDamageableComponent"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Component that handles health, damage, and death for an actor."})]})}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Manages health state, applies damage via ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component_1a7c4abcb86c51c1eb39511494cfbee1bc",children:"ApplyDamage()"}),", allows healing via ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component_1aa66ec8aeace8315def60c8769219a172",children:"Heal()"}),", and fires death logic in ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component_1adf368c5991d1e03392c160c3acd35b10",children:"HandleDeath()"}),"."]}),"\n"]}),(0,r.jsx)(n.p,{children:"Exposes events:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"OnDamageTaken: broadcast when damage is applied."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"OnDeath: broadcast once when the actor dies."}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Tracks last damage details in ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component_1a2f14c8b5c8ff5f3f8d3b2e6789e754e9",children:"LastDamageInfo"})," for UI or replay systems."]}),(0,r.jsxs)(a,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83e\uddcd Members"}),(0,r.jsxs)(a,{open:!0,children:[(0,r.jsx)("summary",{children:"\u2699\ufe0f Functions"}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"UDamageableComponent"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Sets default values and initializes health."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 11\u201318)"]}),(0,r.jsx)(s,{code:"UDamageableComponent::UDamageableComponent()\n{\n// Set this component to be initialized when the game starts, and to be ticked every frame.  You can turn these features\n// off to improve performance if you don't need them.\nPrimaryComponentTick.bCanEverTick = false;\n\n// ...\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"ApplyDamage"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Apply incoming damage."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"const  & DamageInfo"})," \u2013 Context of the damage event (see )."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 30\u201357)"]}),(0,r.jsx)(s,{code:"void UDamageableComponent::ApplyDamage(const FDamageInfo& DamageInfo)\n{\n// Early outs keep the happy path clean\nif (bIsDead || DamageInfo.DamageAmount <= 0.f) return;\n\nLastDamageInfo = DamageInfo;\nCurrentHealth = FMath::Clamp(CurrentHealth - DamageInfo.DamageAmount, 0.f, MaxHealth);\n\n// Did the hit kill the actor?\nconst bool bKilled = (CurrentHealth <= 0.f) && bCanDie;\nif (bKilled)\n{\n\tLastDamageInfo.DamageTags.AddTag(TAG_Damage_Kill);   // mark as lethal before HUD feedback\n\tHandleDeath(LastDamageInfo.Instigator);\n}\n\nOnDamageTaken.Broadcast(CurrentHealth, LastDamageInfo.DamageAmount); // widgets, sounds, etc.\n\n// Let native / BP classes react generically\nif (GetOwner()->GetClass()->ImplementsInterface(UDamageableInterface::StaticClass()))\n{\n\tIDamageableInterface::Execute_OnDamaged(GetOwner(), CurrentHealth, DamageInfo.DamageAmount);\n}\n\nBroadcastHitFeedback();\n\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"Heal"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsxs)("span",{class:"brief-description-pill",children:["Restore health by the specified amount, clamped to ",(0,r.jsx)(n.a,{href:"#class_u_damageable_component_1afc6f8e3d6c8bb8ee7856fc1dfd214b49",children:"MaxHealth"}),"."]})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"float HealAmount"})," \u2013 Amount of health to recover."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 96\u2013102)"]}),(0,r.jsx)(s,{code:"void UDamageableComponent::Heal(float HealAmount)\n{\nif (bIsDead || HealAmount <= 0.f) return;\n\nCurrentHealth = FMath::Clamp(CurrentHealth + HealAmount, 0.f, MaxHealth);\nOnDamageTaken.Broadcast(CurrentHealth, -HealAmount);\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"IsAlive"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Query whether the actor is still alive."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 103\u2013106)"]}),(0,r.jsx)(s,{code:"bool UDamageableComponent::IsAlive() const\n{\nreturn !bIsDead;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"GetHealthPercent"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-func",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Get the current health normalized between 0.0 and 1.0."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 108\u2013111)"]}),(0,r.jsx)(s,{code:"float UDamageableComponent::GetHealthPercent() const\n{\nreturn (MaxHealth > 0.f) ? (CurrentHealth / MaxHealth) : 0.f;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"BeginPlay"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Initialize current health to MaxHealth at play start."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 22\u201328)"]}),(0,r.jsx)(s,{code:"void UDamageableComponent::BeginPlay()\n{\nSuper::BeginPlay();\n\n// Initialize health to max health at the start\nCurrentHealth = MaxHealth;\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"HandleDeath"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Central death handler that ensures death logic only fires once."})]})}),(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Parameters:"})}),(0,r.jsx)("ul",{children:(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"AActor * InstigatorActor"})," \u2013 Actor responsible for the lethal damage."]})}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 72\u201394)"]}),(0,r.jsx)(s,{code:"void UDamageableComponent::HandleDeath(AActor* InstigatorActor)\n{\nif (bCanDie && !bIsDead)\n{\n\n\tbIsDead = true;\n\n\t// Grab the pawn's controller *right now*, before UE clears it\n\tAController* VictimCtrl = nullptr;\n\tif (APawn* P = Cast<APawn>(GetOwner()))\n\t{\n\t\tVictimCtrl = P->GetController();\n\t}\n\n\tif (GetOwner()->GetClass()->ImplementsInterface(UDamageableInterface::StaticClass()))\n\t{\n\t\tIDamageableInterface::Execute_OnKilled(GetOwner(), InstigatorActor);\n\t}\n\n\tOnDeath.Broadcast(GetOwner(), VictimCtrl, InstigatorActor);\n}\n}",language:"cpp",previewLines:15})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"BroadcastHitFeedback"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-function",children:"function"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-func",children:"Protected"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"HUD feedback helper: flashes hitmarker on the shooter's HUD."})]})}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Parameters:"})," None"]}),(0,r.jsx)("hr",{}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"\ud83d\udcc4 Source:"})," ",(0,r.jsx)("code",{children:"Source/TimeAssassin/DamageableComponent.cpp"})," (lines 59\u201370)"]}),(0,r.jsx)(s,{code:"void UDamageableComponent::BroadcastHitFeedback() const\n{\nif (!LastDamageInfo.Instigator) return;\n\nif (APlayerController* PC = Cast<APlayerController>(LastDamageInfo.Instigator->GetInstigatorController()))\n{\n\tif (AGameHUD* HUD = Cast<AGameHUD>(PC->GetHUD()))\n\t{\n\t\tHUD->ShowHitmarker(LastDamageInfo.DamageTags);\n\t}\n}\n}",language:"cpp",previewLines:15})]})]}),(0,r.jsxs)(a,{open:!0,children:[(0,r.jsx)("summary",{children:"\ud83d\udce6 Variables"}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"MaxHealth"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Maximum health value (starting health and heal cap)."})]})}),(0,r.jsx)("p",{children:"Maximum health value (starting health and heal cap)."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"bCanDie"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Whether this actor can die (if false, health bottoms out at 0 but no death)."})]})}),(0,r.jsx)("p",{children:"Whether this actor can die (if false, health bottoms out at 0 but no death)."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"OnDamageTaken"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Broadcast when damage is applied; provides new health and damage amount."})]})}),(0,r.jsx)("p",{children:"Broadcast when damage is applied; provides new health and damage amount."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"OnDeath"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Broadcast on death; provides victim and instigator details."})]})}),(0,r.jsx)("p",{children:"Broadcast on death; provides victim and instigator details."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"LastDamageInfo"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-public-attrib",children:"Public"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Details of the most recent damage event for kill-cams or scoreboards."})]})}),(0,r.jsx)("p",{children:"Details of the most recent damage event for kill-cams or scoreboards."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"CurrentHealth"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-attrib",children:"Protected"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"Current health value (0 to MaxHealth)."})]})}),(0,r.jsx)("p",{children:"Current health value (0 to MaxHealth)."})]}),(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,r.jsx)("code",{children:"bIsDead"}),"\r\n",(0,r.jsx)("span",{class:"member-badge kind-variable",children:"variable"}),"\r\n",(0,r.jsx)("span",{class:"member-badge section-protected-attrib",children:"Protected"}),"\r\n",(0,r.jsx)("span",{class:"brief-description-pill",children:"True once death logic has executed; prevents multiple death broadcasts."})]})}),(0,r.jsx)("p",{children:"True once death logic has executed; prevents multiple death broadcasts."})]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>c});var s=a(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);