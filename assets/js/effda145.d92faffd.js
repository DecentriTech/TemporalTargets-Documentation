"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5507],{7856:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"API/Core Gameplay Logic/index","title":"Core Gameplay Logic","description":"Classes that implement core gameplay systems like spawning, replay, and game flow.","source":"@site/docs/API/Core Gameplay Logic/index.md","sourceDirName":"API/Core Gameplay Logic","slug":"/API/Core-Gameplay-Logic","permalink":"/TemporalTargets-Documentation/docs/API/Core-Gameplay-Logic","draft":false,"unlisted":false,"editUrl":"https://github.com/DecentriTech/TemporalTargets-Documentation/tree/main/website/docs/API/Core Gameplay Logic/index.md","tags":[],"version":"current","frontMatter":{"title":"Core Gameplay Logic","sidebar_label":"Core Gameplay Logic","slug":"/API/Core-Gameplay-Logic"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcc4 File: DamageableInterface.h","permalink":"/TemporalTargets-Documentation/docs/API/_damageable_interface_8h"},"next":{"title":"\ud83d\udcc4 File: OrbitSpectatorPawn.h","permalink":"/TemporalTargets-Documentation/docs/API/_orbit_spectator_pawn_8h"}}');var o=r(4848),l=r(8453);const n={title:"Core Gameplay Logic",sidebar_label:"Core Gameplay Logic",slug:"/API/Core-Gameplay-Logic"},s="\ud83d\uddc2\ufe0f Category: Core-Gameplay-Logic",c={},i=[];function p(e){const a={blockquote:"blockquote",h1:"h1",header:"header",p:"p",...(0,l.R)(),...e.components},{FileCard:r}=a;return r||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("FileCard",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"\ufe0f-category-core-gameplay-logic",children:"\ud83d\uddc2\ufe0f Category: Core-Gameplay-Logic"})}),"\n",(0,o.jsxs)(a.blockquote,{children:["\n",(0,o.jsx)(a.p,{children:"Classes that implement core gameplay systems like spawning, replay, and game flow."}),"\n"]}),"\n",(0,o.jsx)(r,{filename:"OrbitSpectatorPawn.h",url:"/docs/API/_orbit_spectator_pawn_8h",description:"Declares a pawn that smoothly orbits the killer after player death."}),"\n",(0,o.jsx)(r,{filename:"TACharacter.h",url:"/docs/API/_t_a_character_8h",description:"Declares the primary player character class for Temporal Targets."}),"\n",(0,o.jsx)(r,{filename:"TAPlayerController.h",url:"/docs/API/_t_a_player_controller_8h",description:"Declares the custom PlayerController responsible for HUD and spectate management."}),"\n",(0,o.jsx)(r,{filename:"TemporalAIController.h",url:"/docs/API/_temporal_a_i_controller_8h",description:"Declares the AI controller for ghost replay characters."}),"\n",(0,o.jsx)(r,{filename:"TemporalCharacter.h",url:"/docs/API/_temporal_character_8h",description:"Defines the ghost character class responsible for replaying recorded gameplay."}),"\n",(0,o.jsx)(r,{filename:"TemporalGameMode.h",url:"/docs/API/_temporal_game_mode_8h",description:"Declares the [ATemporalGameMode](#class_a_temporal_game_mode) class for managing player respawn and ghost replay systems."})]})}function m(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>n,x:()=>s});var t=r(6540);const o={},l=t.createContext(o);function n(e){const a=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),t.createElement(l.Provider,{value:a},e.children)}}}]);