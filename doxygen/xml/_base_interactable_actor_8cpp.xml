<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_base_interactable_actor_8cpp" kind="file" language="C++">
    <compoundname>BaseInteractableActor.cpp</compoundname>
    <includes refid="_base_interactable_actor_8h" local="yes">BaseInteractableActor.h</includes>
    <includes refid="_b_p_i___interactable_8h" local="yes">BPI_Interactable.h</includes>
    <incdepgraph>
      <node id="8">
        <label>BPI_Interactable.generated.h</label>
      </node>
      <node id="9">
        <label>BaseInteractableActor.generated.h</label>
      </node>
      <node id="5">
        <label>Components/SphereComponent.h</label>
      </node>
      <node id="3">
        <label>CoreMinimal.h</label>
      </node>
      <node id="6">
        <label>BPI_Interactable.h</label>
        <link refid="_b_p_i___interactable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Source/TimeAssassin/BaseInteractableActor.cpp</label>
        <link refid="_base_interactable_actor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BaseInteractableActor.h</label>
        <link refid="_base_interactable_actor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>GameFramework/Actor.h</label>
      </node>
      <node id="7">
        <label>UObject/Interface.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Fill<sp/>out<sp/>your<sp/>copyright<sp/>notice<sp/>in<sp/>the<sp/>Description<sp/>page<sp/>of<sp/>Project<sp/>Settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_base_interactable_actor_8h" kindref="compound">BaseInteractableActor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_p_i___interactable_8h" kindref="compound">BPI_Interactable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------<sp/>static<sp/>tag<sp/>definitions<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FName<sp/><ref refid="class_a_base_interactable_actor_1a669d64f5e8fa8db483d5a5311529a8db" kindref="member">ABaseInteractableActor::TAG_Ghost</ref>(TEXT(</highlight><highlight class="stringliteral">&quot;Ghost&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FName<sp/><ref refid="class_a_base_interactable_actor_1aa1fccf554c3446366866a326bbe4c648" kindref="member">ABaseInteractableActor::TAG_Player</ref>(TEXT(</highlight><highlight class="stringliteral">&quot;Player&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_a_base_interactable_actor_1a234754994153799ecc3ea22c5b46881d" refkind="member"><highlight class="normal"><ref refid="class_a_base_interactable_actor_1a234754994153799ecc3ea22c5b46881d" kindref="member">ABaseInteractableActor::ABaseInteractableActor</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>PrimaryActorTick.bCanEverTick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>RootComponent<sp/>=<sp/>CreateDefaultSubobject&lt;USceneComponent&gt;(TEXT(</highlight><highlight class="stringliteral">&quot;Root&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref><sp/>=<sp/>CreateDefaultSubobject&lt;USphereComponent&gt;(TEXT(</highlight><highlight class="stringliteral">&quot;InteractionSphere&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetupAttachment(RootComponent);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetSphereRadius(<ref refid="class_a_base_interactable_actor_1ab0d3f1e869442fbc9672b06c4e8a2f74" kindref="member">InteractionRadius</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>CDO<sp/>+<sp/>editors<sp/>in<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetCollisionEnabled(ECollisionEnabled::QueryOnly);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetCollisionObjectType(ECC_WorldDynamic);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetCollisionResponseToAllChannels(ECR_Ignore);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetCollisionResponseToChannel(ECC_Pawn,<sp/>ECR_Overlap);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetGenerateOverlapEvents(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_a_base_interactable_actor_1a51297b0b0970665ec63842e7889daeaf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a51297b0b0970665ec63842e7889daeaf" kindref="member">ABaseInteractableActor::BeginPlay</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Super::BeginPlay();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;SetSphereRadius(<ref refid="class_a_base_interactable_actor_1ab0d3f1e869442fbc9672b06c4e8a2f74" kindref="member">InteractionRadius</ref>);<sp/></highlight><highlight class="comment">//<sp/>honour<sp/>tweaked<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;OnComponentBeginOverlap.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1a59c0466ebd11a782866850f6b62d585e" kindref="member">ABaseInteractableActor::HandleSphereBeginOverlap</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ad70d64534f3c93e062e14871eaa9af67" kindref="member">InteractionSphere</ref>-&gt;OnComponentEndOverlap.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1ab406e3af4b71c1fab0e9b7460dbca127" kindref="member">ABaseInteractableActor::HandleSphereEndOverlap</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Route<sp/>Blueprint-native<sp/>events<sp/>through<sp/>C++<sp/>delegates<sp/>so<sp/>everyone<sp/>gets<sp/>pinged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a7d7bd085e950f3215e92048b70f17808" kindref="member">OnFocusedByInteractor</ref>.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1aa452ecea351e91c46a56a6720aac604a" kindref="member">ABaseInteractableActor::OnInteractorFocused</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a2bbb952da0d9139277b29aa8108a5e5e" kindref="member">OnUnfocusedByInteractor</ref>.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1adcbab5ca9e58789af7ffe8504b4f2a39" kindref="member">ABaseInteractableActor::OnInteractorUnfocused</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a88022fe2880641029ff4633f8ce7c008" kindref="member">OnInteractorEnteredRadiusEvent</ref>.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1a5ba8c7d714b4f4f7ddb311c154cd3de6" kindref="member">ABaseInteractableActor::OnInteractorEnteredRadius</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ab43bb877155ef27a66a6dff1aa43592f" kindref="member">OnInteractorLeftRadiusEvent</ref>.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_a_base_interactable_actor_1ad0b5f103acee6b612496ab1c96682e75" kindref="member">ABaseInteractableActor::OnInteractorLeftRadius</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=================<sp/>IBPI_Interactable<sp/>=================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_a_base_interactable_actor_1a8a7f264e498bb2d62e2b2ff38b04c69a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a8a7f264e498bb2d62e2b2ff38b04c69a" kindref="member">ABaseInteractableActor::Interact_Implementation</ref>(AActor*<sp/>Interactor)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Log,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Interacted<sp/>by<sp/>[%s]&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*GetName(),<sp/>Interactor<sp/>?<sp/>*Interactor-&gt;GetName()<sp/>:<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_a_base_interactable_actor_1a4ec6cf587e143d77f1fb703ff99fac12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a4ec6cf587e143d77f1fb703ff99fac12" kindref="member">ABaseInteractableActor::CanInteract_Implementation</ref>(AActor*<sp/></highlight><highlight class="comment">/*Interactor*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>in<sp/>child<sp/>classes<sp/>for<sp/>doors,<sp/>switches,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=================<sp/>Overlap<sp/>Handling<sp/>=================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_a_base_interactable_actor_1a59c0466ebd11a782866850f6b62d585e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a59c0466ebd11a782866850f6b62d585e" kindref="member">ABaseInteractableActor::HandleSphereBeginOverlap</ref>(UPrimitiveComponent*,<sp/>AActor*<sp/>OtherActor,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>UPrimitiveComponent*,<sp/>int32,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FHitResult&amp;)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_base_interactable_actor_1a9cad0b2231fca84ac1088babd19d3e5f" kindref="member">IsValidInteractor</ref>(OtherActor))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a507a5faadab4934a20d7a4ce69ed8e63" kindref="member">RegisterInteractor</ref>(OtherActor);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_a_base_interactable_actor_1ab406e3af4b71c1fab0e9b7460dbca127" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1ab406e3af4b71c1fab0e9b7460dbca127" kindref="member">ABaseInteractableActor::HandleSphereEndOverlap</ref>(UPrimitiveComponent*,<sp/>AActor*<sp/>OtherActor,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>UPrimitiveComponent*,<sp/>int32)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtherActor)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a7cc39f517b017fcea36e95d7660d56c6" kindref="member">UnregisterInteractor</ref>(OtherActor);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=================<sp/>Helpers<sp/>==========================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_a_base_interactable_actor_1a9cad0b2231fca84ac1088babd19d3e5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a9cad0b2231fca84ac1088babd19d3e5f" kindref="member">ABaseInteractableActor::IsValidInteractor</ref>(AActor*<sp/>Candidate)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Candidate<sp/>&amp;&amp;<sp/>Candidate<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>Candidate-&gt;IsA(APawn::StaticClass());</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_a_base_interactable_actor_1a507a5faadab4934a20d7a4ce69ed8e63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a507a5faadab4934a20d7a4ce69ed8e63" kindref="member">ABaseInteractableActor::RegisterInteractor</ref>(AActor*<sp/>Interactor)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_a_base_interactable_actor_1ae2b7b85c86c799242aee363bfda66514" kindref="member">InteractorsInRange</ref>.Contains(Interactor))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ae2b7b85c86c799242aee363bfda66514" kindref="member">InteractorsInRange</ref>.Add(Interactor);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Interactor-&gt;GetClass()-&gt;ImplementsInterface(UBPI_Interactable::StaticClass()))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IBPI_Interactable::Execute_RegisterInteractable(Interactor,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1a88022fe2880641029ff4633f8ce7c008" kindref="member">OnInteractorEnteredRadiusEvent</ref>.Broadcast(Interactor);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_a_base_interactable_actor_1a7cc39f517b017fcea36e95d7660d56c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a7cc39f517b017fcea36e95d7660d56c6" kindref="member">ABaseInteractableActor::UnregisterInteractor</ref>(AActor*<sp/>Interactor)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_base_interactable_actor_1ae2b7b85c86c799242aee363bfda66514" kindref="member">InteractorsInRange</ref>.Remove(Interactor)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Interactor-&gt;GetClass()-&gt;ImplementsInterface(UBPI_Interactable::StaticClass()))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IBPI_Interactable::Execute_UnregisterInteractable(Interactor,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_base_interactable_actor_1ab43bb877155ef27a66a6dff1aa43592f" kindref="member">OnInteractorLeftRadiusEvent</ref>.Broadcast(Interactor);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=================<sp/>Tag<sp/>helpers<sp/>======================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_a_base_interactable_actor_1a90247d70974496d1dd72c7cd9f5fa464" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a90247d70974496d1dd72c7cd9f5fa464" kindref="member">ABaseInteractableActor::IsGhostInteractor</ref>(AActor*<sp/>Interactor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Interactor<sp/>&amp;&amp;<sp/>Interactor-&gt;ActorHasTag(<ref refid="class_a_base_interactable_actor_1a669d64f5e8fa8db483d5a5311529a8db" kindref="member">TAG_Ghost</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_a_base_interactable_actor_1af412f48857155af995809b5fe83b6a6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1af412f48857155af995809b5fe83b6a6f" kindref="member">ABaseInteractableActor::IsPlayerInteractor</ref>(AActor*<sp/>Interactor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Interactor<sp/>&amp;&amp;<sp/>Interactor-&gt;ActorHasTag(<ref refid="class_a_base_interactable_actor_1aa1fccf554c3446366866a326bbe4c648" kindref="member">TAG_Player</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_a_base_interactable_actor_1ae9ac03e43e72c0e05ec9bff1bfd9d0ee" refkind="member"><highlight class="normal">FName<sp/><ref refid="class_a_base_interactable_actor_1ae9ac03e43e72c0e05ec9bff1bfd9d0ee" kindref="member">ABaseInteractableActor::GetInteractorTypeTag</ref>(AActor*<sp/>Interactor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_base_interactable_actor_1a90247d70974496d1dd72c7cd9f5fa464" kindref="member">IsGhostInteractor</ref>(Interactor))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a669d64f5e8fa8db483d5a5311529a8db" kindref="member">TAG_Ghost</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_base_interactable_actor_1af412f48857155af995809b5fe83b6a6f" kindref="member">IsPlayerInteractor</ref>(Interactor))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1aa1fccf554c3446366866a326bbe4c648" kindref="member">TAG_Player</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FName(</highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>===============<sp/>Blueprint<sp/>default<sp/>stubs<sp/>============<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_a_base_interactable_actor_1acced54fedacb8643d9fc5a54d9476ed2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1acced54fedacb8643d9fc5a54d9476ed2" kindref="member">ABaseInteractableActor::OnInteractorFocused_Implementation</ref>(AActor*<sp/></highlight><highlight class="comment">/*Interactor*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="139" refid="class_a_base_interactable_actor_1a02b5f427566601c188c3f108029af576" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a02b5f427566601c188c3f108029af576" kindref="member">ABaseInteractableActor::OnInteractorUnfocused_Implementation</ref>(AActor*<sp/></highlight><highlight class="comment">/*Interactor*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="140" refid="class_a_base_interactable_actor_1a13aac27edf93941d298a12f8aec93a84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a13aac27edf93941d298a12f8aec93a84" kindref="member">ABaseInteractableActor::OnInteractorEnteredRadius_Implementation</ref>(AActor*<sp/></highlight><highlight class="comment">/*Interactor*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="141" refid="class_a_base_interactable_actor_1a429e422de3388e0d080dcb7ed6350ae7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_base_interactable_actor_1a429e422de3388e0d080dcb7ed6350ae7" kindref="member">ABaseInteractableActor::OnInteractorLeftRadius_Implementation</ref>(AActor*<sp/></highlight><highlight class="comment">/*Interactor*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
    </programlisting>
    <location file="Source/TimeAssassin/BaseInteractableActor.cpp"/>
  </compounddef>
</doxygen>
