<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_weapon_inventory_component_8cpp" kind="file" language="C++">
    <compoundname>WeaponInventoryComponent.cpp</compoundname>
    <includes refid="_weapon_inventory_component_8h" local="yes">WeaponInventoryComponent.h</includes>
    <includes refid="_weapon_component_8h" local="yes">WeaponComponent.h</includes>
    <incdepgraph>
      <node id="11">
        <label>Blueprint/UserWidget.h</label>
      </node>
      <node id="4">
        <label>Components/ActorComponent.h</label>
      </node>
      <node id="3">
        <label>CoreMinimal.h</label>
      </node>
      <node id="12">
        <label>CrosshairWidget.generated.h</label>
      </node>
      <node id="6">
        <label>Engine/DataAsset.h</label>
      </node>
      <node id="15">
        <label>CombatTags.h</label>
        <link refid="_combat_tags_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>CrosshairWidget.h</label>
        <link refid="_crosshair_widget_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>HitmarkerWidget.h</label>
        <link refid="_hitmarker_widget_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>WeaponComponent.h</label>
        <link refid="_weapon_component_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>WeaponDataAsset.h</label>
        <link refid="_weapon_data_asset_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Source/TimeAssassin/WeaponInventoryComponent.cpp</label>
        <link refid="_weapon_inventory_component_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>WeaponInventoryComponent.h</label>
        <link refid="_weapon_inventory_component_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>GameplayTagContainer.h</label>
      </node>
      <node id="17">
        <label>HitmarkerWidget.generated.h</label>
      </node>
      <node id="16">
        <label>NativeGameplayTags.h</label>
      </node>
      <node id="18">
        <label>WeaponComponent.generated.h</label>
      </node>
      <node id="7">
        <label>WeaponDataAsset.generated.h</label>
      </node>
      <node id="8">
        <label>WeaponInventoryComponent.generated.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Fill<sp/>out<sp/>your<sp/>copyright<sp/>notice<sp/>in<sp/>the<sp/>Description<sp/>page<sp/>of<sp/>Project<sp/>Settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_weapon_inventory_component_8h" kindref="compound">WeaponInventoryComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_weapon_component_8h" kindref="compound">WeaponComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>default<sp/>values<sp/>for<sp/>this<sp/>component&apos;s<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_u_weapon_inventory_component_1a6c1781e7466ba655d3ca79c04cb5f946" refkind="member"><highlight class="normal"><ref refid="class_u_weapon_inventory_component_1a6c1781e7466ba655d3ca79c04cb5f946" kindref="member">UWeaponInventoryComponent::UWeaponInventoryComponent</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>component<sp/>to<sp/>be<sp/>initialized<sp/>when<sp/>the<sp/>game<sp/>starts,<sp/>and<sp/>to<sp/>be<sp/>ticked<sp/>every<sp/>frame.<sp/><sp/>You<sp/>can<sp/>turn<sp/>these<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>off<sp/>to<sp/>improve<sp/>performance<sp/>if<sp/>you<sp/>don&apos;t<sp/>need<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>PrimaryComponentTick.bCanEverTick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>game<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_u_weapon_inventory_component_1a0453541df80d538c938ede151ce6de8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a0453541df80d538c938ede151ce6de8e" kindref="member">UWeaponInventoryComponent::BeginPlay</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Super::BeginPlay();</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_u_weapon_inventory_component_1a95e9914bb807c3488fa05a1283fa150e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a95e9914bb807c3488fa05a1283fa150e" kindref="member">UWeaponInventoryComponent::InitializeInventory</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Log,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Initializing<sp/>weapon<sp/>inventory...&quot;</highlight><highlight class="normal">),<sp/>*GetName());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>our<sp/>new<sp/>getter<sp/>to<sp/>load<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_data_asset" kindref="compound">UWeaponDataAsset</ref>*<sp/>DefaultData<sp/>=<sp/><ref refid="class_u_weapon_inventory_component_1aa6c64a882956e145f77f30d82db8d1ab" kindref="member">GetWeaponDataByIndex</ref>(<ref refid="class_u_weapon_inventory_component_1a3d6e959c4d2d2ad9c68a8f21e4440677" kindref="member">DefaultWeaponIndex</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DefaultData)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a7ae4819939c741f270e5ba24d9f57e55" kindref="member">AssignWeaponToComponent</ref>(DefaultData);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a25817fdc48a4b5598a1644722605a39d" kindref="member">CurrentWeaponIndex</ref><sp/>=<sp/><ref refid="class_u_weapon_inventory_component_1a3d6e959c4d2d2ad9c68a8f21e4440677" kindref="member">DefaultWeaponIndex</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Error,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>load<sp/>default<sp/>weapon<sp/>at<sp/>index<sp/>%d!&quot;</highlight><highlight class="normal">),<sp/>*GetName(),<sp/><ref refid="class_u_weapon_inventory_component_1a3d6e959c4d2d2ad9c68a8f21e4440677" kindref="member">DefaultWeaponIndex</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_u_weapon_inventory_component_1ad8a966f1a82ce07364926fb5104af05b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1ad8a966f1a82ce07364926fb5104af05b" kindref="member">UWeaponInventoryComponent::InitializeInventoryNextTick</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UWorld*<sp/>World<sp/>=<sp/>GetWorld())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>previous<sp/>pending<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>World-&gt;GetTimerManager().ClearTimer(<ref refid="class_u_weapon_inventory_component_1a16861966b715ee5f7bf06796d6194a3c" kindref="member">DeferredInitHandle</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>schedule<sp/>InitializeInventory()<sp/>for<sp/>the<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>World-&gt;GetTimerManager().SetTimerForNextTick(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTimerDelegate::CreateUObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_u_weapon_inventory_component_1a95e9914bb807c3488fa05a1283fa150e" kindref="member">UWeaponInventoryComponent::InitializeInventory</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_u_weapon_inventory_component_1aa6c64a882956e145f77f30d82db8d1ab" refkind="member"><highlight class="normal"><ref refid="class_u_weapon_data_asset" kindref="compound">UWeaponDataAsset</ref>*<sp/><ref refid="class_u_weapon_inventory_component_1aa6c64a882956e145f77f30d82db8d1ab" kindref="member">UWeaponInventoryComponent::GetWeaponDataByIndex</ref>(int32<sp/>Index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>.IsValidIndex(Index))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>synchronously<sp/>here;<sp/>switch<sp/>to<sp/>async<sp/>if<sp/>you<sp/>need<sp/>streaming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>[Index].LoadSynchronous();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_u_weapon_inventory_component_1a8cbb1ff06c45848638f8b096df21ec16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a8cbb1ff06c45848638f8b096df21ec16" kindref="member">UWeaponInventoryComponent::SwitchToWeapon</ref>(int32<sp/>Index)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_u_weapon_inventory_component_1a73b28581ff41a8430ebb0eb533fe66cf" kindref="member">WeaponComponentRef</ref><sp/>||<sp/>!<ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>.IsValidIndex(Index))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>.Num()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Error,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Tried<sp/>to<sp/>switch<sp/>weapon,<sp/>but<sp/>WeaponList<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal">),<sp/>*GetName());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_data_asset" kindref="compound">UWeaponDataAsset</ref>*<sp/>NewWeapon<sp/>=<sp/><ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>[Index].LoadSynchronous();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NewWeapon)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a7ae4819939c741f270e5ba24d9f57e55" kindref="member">AssignWeaponToComponent</ref>(NewWeapon);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a25817fdc48a4b5598a1644722605a39d" kindref="member">CurrentWeaponIndex</ref><sp/>=<sp/>Index;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Log,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Switched<sp/>to<sp/>weapon<sp/>index<sp/>%d:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>Index,<sp/>*NewWeapon-&gt;GetName());</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_u_weapon_inventory_component_1a0ca7938aecbf5549419dfafea7ef3d83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a0ca7938aecbf5549419dfafea7ef3d83" kindref="member">UWeaponInventoryComponent::CycleWeapon</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>.Num()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Error,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[WeaponInventory]<sp/>Weapon<sp/>list<sp/>is<sp/>empty!<sp/>Cannot<sp/>cycle<sp/>weapons.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_weapon_inventory_component_1a73b28581ff41a8430ebb0eb533fe66cf" kindref="member">WeaponComponentRef</ref>-&gt;bIsReloading)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Warning,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[WeaponInventory]<sp/>Cannot<sp/>switch<sp/>weapons<sp/>while<sp/>reloading.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32<sp/>NextIndex<sp/>=<sp/>(<ref refid="class_u_weapon_inventory_component_1a25817fdc48a4b5598a1644722605a39d" kindref="member">CurrentWeaponIndex</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="class_u_weapon_inventory_component_1a9a6f240a38b8c6fa99d139bfabf9af1e" kindref="member">WeaponInventory</ref>.Num();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a8cbb1ff06c45848638f8b096df21ec16" kindref="member">SwitchToWeapon</ref>(NextIndex);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_u_weapon_inventory_component_1a7ae4819939c741f270e5ba24d9f57e55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_weapon_inventory_component_1a7ae4819939c741f270e5ba24d9f57e55" kindref="member">UWeaponInventoryComponent::AssignWeaponToComponent</ref>(<ref refid="class_u_weapon_data_asset" kindref="compound">UWeaponDataAsset</ref>*<sp/>WeaponData)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_weapon_inventory_component_1a73b28581ff41a8430ebb0eb533fe66cf" kindref="member">WeaponComponentRef</ref><sp/>&amp;&amp;<sp/>WeaponData)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UE_LOG(LogTemp,<sp/>Log,<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;[WeaponInventory]<sp/>Assigning<sp/>weapon<sp/>%s<sp/>to<sp/>component.&quot;</highlight><highlight class="normal">),<sp/>*WeaponData-&gt;GetName());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_weapon_inventory_component_1a73b28581ff41a8430ebb0eb533fe66cf" kindref="member">WeaponComponentRef</ref>-&gt;SetWeaponData(WeaponData);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Source/TimeAssassin/WeaponInventoryComponent.cpp"/>
  </compounddef>
</doxygen>
