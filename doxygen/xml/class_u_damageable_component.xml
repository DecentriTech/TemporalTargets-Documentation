<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_u_damageable_component" kind="class" language="C++" prot="public">
    <compoundname>UDamageableComponent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UActorComponent</basecompoundref>
    <includes refid="_damageable_component_8h" local="no">DamageableComponent.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_u_damageable_component_1afc6f8e3d6c8bb8ee7856fc1dfd214b49" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float UDamageableComponent::MaxHealth</definition>
        <argsstring></argsstring>
        <name>MaxHealth</name>
        <qualifiedname>UDamageableComponent::MaxHealth</qualifiedname>
        <initializer>= 100.f</initializer>
        <briefdescription>
<para>Maximum health value (starting health and heal cap). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="143" column="11" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_damageable_component_1afb3a578e0c1401ed5ac7e2d852faf925" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool UDamageableComponent::bCanDie</definition>
        <argsstring></argsstring>
        <name>bCanDie</name>
        <qualifiedname>UDamageableComponent::bCanDie</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether this actor can die (if false, health bottoms out at 0 but no death). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="147" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_damageable_component_1a7ab03ef35ba0295ed70ebfd415c4e2ea" prot="public" static="no" mutable="no">
        <type>FOnDamageTakenSignature</type>
        <definition>FOnDamageTakenSignature UDamageableComponent::OnDamageTaken</definition>
        <argsstring></argsstring>
        <name>OnDamageTaken</name>
        <qualifiedname>UDamageableComponent::OnDamageTaken</qualifiedname>
        <briefdescription>
<para>Broadcast when damage is applied; provides new health and damage amount. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="153" column="29" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_damageable_component_1a0072fe6418a90f6635e44dd2f8921042" prot="public" static="no" mutable="no">
        <type>FOnDeathSignature</type>
        <definition>FOnDeathSignature UDamageableComponent::OnDeath</definition>
        <argsstring></argsstring>
        <name>OnDeath</name>
        <qualifiedname>UDamageableComponent::OnDeath</qualifiedname>
        <briefdescription>
<para>Broadcast on death; provides victim and instigator details. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="157" column="23" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_damageable_component_1a2f14c8b5c8ff5f3f8d3b2e6789e754e9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_damage_info" kindref="compound">FDamageInfo</ref></type>
        <definition>FDamageInfo UDamageableComponent::LastDamageInfo</definition>
        <argsstring></argsstring>
        <name>LastDamageInfo</name>
        <qualifiedname>UDamageableComponent::LastDamageInfo</qualifiedname>
        <briefdescription>
<para>Details of the most recent damage event for kill-cams or scoreboards. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="161" column="17" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="161" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_u_damageable_component_1aa25674ea7c046723d02c1cae695cb663" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float UDamageableComponent::CurrentHealth</definition>
        <argsstring></argsstring>
        <name>CurrentHealth</name>
        <qualifiedname>UDamageableComponent::CurrentHealth</qualifiedname>
        <initializer>= 0.f</initializer>
        <briefdescription>
<para>Current health value (0 to MaxHealth). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="178" column="11" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_u_damageable_component_1a55a2b2b04ad5542a35c5b64510b2e9d5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool UDamageableComponent::bIsDead</definition>
        <argsstring></argsstring>
        <name>bIsDead</name>
        <qualifiedname>UDamageableComponent::bIsDead</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>True once death logic has executed; prevents multiple death broadcasts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="182" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="182" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_u_damageable_component_1a6c9fb26a2b033709f4dceb3b86276481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UDamageableComponent::UDamageableComponent</definition>
        <argsstring>()</argsstring>
        <name>UDamageableComponent</name>
        <qualifiedname>UDamageableComponent::UDamageableComponent</qualifiedname>
        <briefdescription>
<para>Sets default values and initializes health. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="109" column="5" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="11" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1a7c4abcb86c51c1eb39511494cfbee1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDamageableComponent::ApplyDamage</definition>
        <argsstring>(const FDamageInfo &amp;DamageInfo)</argsstring>
        <name>ApplyDamage</name>
        <qualifiedname>UDamageableComponent::ApplyDamage</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_damage_info" kindref="compound">FDamageInfo</ref> &amp;</type>
          <declname>DamageInfo</declname>
        </param>
        <briefdescription>
<para>Apply incoming damage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DamageInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of the damage event (see <ref refid="struct_f_damage_info" kindref="compound">FDamageInfo</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="116" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="30" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1aa66ec8aeace8315def60c8769219a172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDamageableComponent::Heal</definition>
        <argsstring>(float HealAmount)</argsstring>
        <name>Heal</name>
        <qualifiedname>UDamageableComponent::Heal</qualifiedname>
        <param>
          <type>float</type>
          <declname>HealAmount</declname>
        </param>
        <briefdescription>
<para>Restore health by the specified amount, clamped to <ref refid="class_u_damageable_component_1afc6f8e3d6c8bb8ee7856fc1dfd214b49" kindref="member">MaxHealth</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>HealAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of health to recover. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="123" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1a67be50b84291a8d9be223b2a0ce9b158" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UDamageableComponent::IsAlive</definition>
        <argsstring>() const</argsstring>
        <name>IsAlive</name>
        <qualifiedname>UDamageableComponent::IsAlive</qualifiedname>
        <briefdescription>
<para>Query whether the actor is still alive. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if health &gt; 0 and bIsDead is false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="130" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1ac546ba704e419e0d05f458dc27bbf71f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float UDamageableComponent::GetHealthPercent</definition>
        <argsstring>() const</argsstring>
        <name>GetHealthPercent</name>
        <qualifiedname>UDamageableComponent::GetHealthPercent</qualifiedname>
        <briefdescription>
<para>Get the current health normalized between 0.0 and 1.0. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>CurrentHealth / MaxHealth. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="137" column="11" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_u_damageable_component_1ad501407b45d88b2eef8657b05682462a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void UDamageableComponent::BeginPlay</definition>
        <argsstring>() override</argsstring>
        <name>BeginPlay</name>
        <qualifiedname>UDamageableComponent::BeginPlay</qualifiedname>
        <briefdescription>
<para>Initialize current health to MaxHealth at play start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="165" column="18" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1adf368c5991d1e03392c160c3acd35b10" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDamageableComponent::HandleDeath</definition>
        <argsstring>(AActor *InstigatorActor)</argsstring>
        <name>HandleDeath</name>
        <qualifiedname>UDamageableComponent::HandleDeath</qualifiedname>
        <param>
          <type>AActor *</type>
          <declname>InstigatorActor</declname>
        </param>
        <briefdescription>
<para>Central death handler that ensures death logic only fires once. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InstigatorActor</parametername>
</parameternamelist>
<parameterdescription>
<para>Actor responsible for the lethal damage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="171" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="72" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_u_damageable_component_1a4bd397f8e531ad4ef8909a5e97cb2fba" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDamageableComponent::BroadcastHitFeedback</definition>
        <argsstring>() const</argsstring>
        <name>BroadcastHitFeedback</name>
        <qualifiedname>UDamageableComponent::BroadcastHitFeedback</qualifiedname>
        <briefdescription>
<para>HUD feedback helper: flashes hitmarker on the shooter&apos;s HUD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableComponent.h" line="174" column="10" bodyfile="Source/TimeAssassin/DamageableComponent.cpp" bodystart="59" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Component that handles health, damage, and death for an actor. </para>
    </briefdescription>
    <detaileddescription>
<para>Manages health state, applies damage via <ref refid="class_u_damageable_component_1a7c4abcb86c51c1eb39511494cfbee1bc" kindref="member">ApplyDamage()</ref>, allows healing via <ref refid="class_u_damageable_component_1aa66ec8aeace8315def60c8769219a172" kindref="member">Heal()</ref>, and fires death logic in <ref refid="class_u_damageable_component_1adf368c5991d1e03392c160c3acd35b10" kindref="member">HandleDeath()</ref>.</para>
<para>Exposes events:<itemizedlist>
<listitem><para>OnDamageTaken: broadcast when damage is applied.</para>
</listitem><listitem><para>OnDeath: broadcast once when the actor dies.</para>
</listitem></itemizedlist>
</para>
<para>Tracks last damage details in <ref refid="class_u_damageable_component_1a2f14c8b5c8ff5f3f8d3b2e6789e754e9" kindref="member">LastDamageInfo</ref> for UI or replay systems. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>UActorComponent</label>
      </node>
      <node id="1">
        <label>UDamageableComponent</label>
        <link refid="class_u_damageable_component"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>FDamageInfo</label>
        <link refid="struct_f_damage_info"/>
      </node>
      <node id="2">
        <label>UActorComponent</label>
      </node>
      <node id="1">
        <label>UDamageableComponent</label>
        <link refid="class_u_damageable_component"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>LastDamageInfo</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/TimeAssassin/DamageableComponent.h" line="103" column="1" bodyfile="Source/TimeAssassin/DamageableComponent.h" bodystart="104" bodyend="183"/>
    <listofallmembers>
      <member refid="class_u_damageable_component_1a7c4abcb86c51c1eb39511494cfbee1bc" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>ApplyDamage</name></member>
      <member refid="class_u_damageable_component_1afb3a578e0c1401ed5ac7e2d852faf925" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>bCanDie</name></member>
      <member refid="class_u_damageable_component_1ad501407b45d88b2eef8657b05682462a" prot="protected" virt="virtual"><scope>UDamageableComponent</scope><name>BeginPlay</name></member>
      <member refid="class_u_damageable_component_1a55a2b2b04ad5542a35c5b64510b2e9d5" prot="protected" virt="non-virtual"><scope>UDamageableComponent</scope><name>bIsDead</name></member>
      <member refid="class_u_damageable_component_1a4bd397f8e531ad4ef8909a5e97cb2fba" prot="protected" virt="non-virtual"><scope>UDamageableComponent</scope><name>BroadcastHitFeedback</name></member>
      <member refid="class_u_damageable_component_1aa25674ea7c046723d02c1cae695cb663" prot="protected" virt="non-virtual"><scope>UDamageableComponent</scope><name>CurrentHealth</name></member>
      <member refid="class_u_damageable_component_1ac546ba704e419e0d05f458dc27bbf71f" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>GetHealthPercent</name></member>
      <member refid="class_u_damageable_component_1adf368c5991d1e03392c160c3acd35b10" prot="protected" virt="non-virtual"><scope>UDamageableComponent</scope><name>HandleDeath</name></member>
      <member refid="class_u_damageable_component_1aa66ec8aeace8315def60c8769219a172" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>Heal</name></member>
      <member refid="class_u_damageable_component_1a67be50b84291a8d9be223b2a0ce9b158" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>IsAlive</name></member>
      <member refid="class_u_damageable_component_1a2f14c8b5c8ff5f3f8d3b2e6789e754e9" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>LastDamageInfo</name></member>
      <member refid="class_u_damageable_component_1afc6f8e3d6c8bb8ee7856fc1dfd214b49" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>MaxHealth</name></member>
      <member refid="class_u_damageable_component_1a7ab03ef35ba0295ed70ebfd415c4e2ea" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>OnDamageTaken</name></member>
      <member refid="class_u_damageable_component_1a0072fe6418a90f6635e44dd2f8921042" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>OnDeath</name></member>
      <member refid="class_u_damageable_component_1a6c9fb26a2b033709f4dceb3b86276481" prot="public" virt="non-virtual"><scope>UDamageableComponent</scope><name>UDamageableComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
