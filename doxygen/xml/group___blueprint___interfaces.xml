<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___blueprint___interfaces" kind="group">
    <compoundname>Blueprint_Interfaces</compoundname>
    <title>Blueprint Interfaces</title>
    <innerfile refid="_b_p_i___interactable_8h">BPI_Interactable.h</innerfile>
    <innerfile refid="_damageable_interface_8h">DamageableInterface.h</innerfile>
    <innerclass refid="class_u_b_p_i___interactable" prot="public">UBPI_Interactable</innerclass>
    <innerclass refid="class_i_b_p_i___interactable" prot="public">IBPI_Interactable</innerclass>
    <innerclass refid="class_u_damageable_interface" prot="public">UDamageableInterface</innerclass>
    <innerclass refid="class_i_damageable_interface" prot="public">IDamageableInterface</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___blueprint___interfaces_1ga1f6318dd8d764d86d152bafcceeaf950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IDamageableInterface::TakeDamage</definition>
        <argsstring>(const FDamageInfo &amp;DamageInfo)</argsstring>
        <name>TakeDamage</name>
        <qualifiedname>IDamageableInterface::TakeDamage</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_damage_info" kindref="compound">FDamageInfo</ref> &amp;</type>
          <declname>DamageInfo</declname>
        </param>
        <briefdescription>
<para>Apply the specified damage to this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DamageInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct containing the amount, type, and instigator of the damage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Call this function to inflict damage. The implementation should reduce health and then invoke <ref refid="group___blueprint___interfaces_1gaa2527dc978acb578318f79c3704b6679" kindref="member">OnDamaged</ref> or <ref refid="group___blueprint___interfaces_1ga9f9b8a6fb04274b8b2418423c31b823c" kindref="member">OnKilled</ref> as appropriate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableInterface.h" line="64" column="6"/>
      </memberdef>
      <memberdef kind="function" id="group___blueprint___interfaces_1gaa2527dc978acb578318f79c3704b6679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IDamageableInterface::OnDamaged</definition>
        <argsstring>(float NewHealth, float DamageAmount)</argsstring>
        <name>OnDamaged</name>
        <qualifiedname>IDamageableInterface::OnDamaged</qualifiedname>
        <param>
          <type>float</type>
          <declname>NewHealth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>DamageAmount</declname>
        </param>
        <briefdescription>
<para>Called when this object’s health has decreased but is still above zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewHealth</parametername>
</parameternamelist>
<parameterdescription>
<para>The updated health value after applying damage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DamageAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of health lost in this hit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Override to play hit reactions, spawn VFX/SFX, or update UI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableInterface.h" line="75" column="6"/>
      </memberdef>
      <memberdef kind="function" id="group___blueprint___interfaces_1ga9f9b8a6fb04274b8b2418423c31b823c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IDamageableInterface::OnKilled</definition>
        <argsstring>(AActor *DamageInstigator)</argsstring>
        <name>OnKilled</name>
        <qualifiedname>IDamageableInterface::OnKilled</qualifiedname>
        <param>
          <type>AActor *</type>
          <declname>DamageInstigator</declname>
        </param>
        <briefdescription>
<para>Called when this object’s health reaches zero or below. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DamageInstigator</parametername>
</parameternamelist>
<parameterdescription>
<para>The actor responsible for causing the final blow.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Override to handle death logic: ragdoll, remove the actor, award points, etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/DamageableInterface.h" line="85" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Interfaces for use in Blueprints. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
