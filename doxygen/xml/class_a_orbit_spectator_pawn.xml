<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_a_orbit_spectator_pawn" kind="class" language="C++" prot="public">
    <compoundname>AOrbitSpectatorPawn</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ASpectatorPawn</basecompoundref>
    <includes refid="_orbit_spectator_pawn_8h" local="no">OrbitSpectatorPawn.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1a4472908b71b396733bbda86b38918097" prot="private" static="no" mutable="no">
        <type>USpringArmComponent *</type>
        <definition>USpringArmComponent* AOrbitSpectatorPawn::SpringArm</definition>
        <argsstring></argsstring>
        <name>SpringArm</name>
        <qualifiedname>AOrbitSpectatorPawn::SpringArm</qualifiedname>
        <briefdescription>
<para>Spring arm that positions and rotates the camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="58" column="25" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1a4929761058f42c30fa07d8605d2be012" prot="private" static="no" mutable="no">
        <type>UCameraComponent *</type>
        <definition>UCameraComponent* AOrbitSpectatorPawn::Camera</definition>
        <argsstring></argsstring>
        <name>Camera</name>
        <qualifiedname>AOrbitSpectatorPawn::Camera</qualifiedname>
        <briefdescription>
<para>Camera attached to the spring arm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="62" column="22" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1a24c5e1186db9f8e8e7bf60993ea45405" prot="private" static="no" mutable="no">
        <type>AActor *</type>
        <definition>AActor* AOrbitSpectatorPawn::TargetActor</definition>
        <argsstring></argsstring>
        <name>TargetActor</name>
        <qualifiedname>AOrbitSpectatorPawn::TargetActor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Actor to orbit (the killer). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="65" column="12" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1a553f1235c13d69a4dcdd5309e76c9b01" prot="private" static="no" mutable="no">
        <type>FVector</type>
        <definition>FVector AOrbitSpectatorPawn::StartLocation</definition>
        <argsstring></argsstring>
        <name>StartLocation</name>
        <qualifiedname>AOrbitSpectatorPawn::StartLocation</qualifiedname>
        <initializer>= FVector::ZeroVector</initializer>
        <briefdescription>
<para>Starting point of the blend (death location). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="68" column="13" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1ab3ef177c965bc7ce3b40b92805eb2ab3" prot="private" static="no" mutable="no">
        <type>FVector</type>
        <definition>FVector AOrbitSpectatorPawn::TargetOffset</definition>
        <argsstring></argsstring>
        <name>TargetOffset</name>
        <qualifiedname>AOrbitSpectatorPawn::TargetOffset</qualifiedname>
        <initializer>= FVector(-400, 0, 200)</initializer>
        <briefdescription>
<para>Offset from TargetActor to maintain while orbiting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="71" column="13" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1a693da49425407f0e913d7e094cbaddba" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float AOrbitSpectatorPawn::BlendTime</definition>
        <argsstring></argsstring>
        <name>BlendTime</name>
        <qualifiedname>AOrbitSpectatorPawn::BlendTime</qualifiedname>
        <initializer>= 1.0f</initializer>
        <briefdescription>
<para>Duration (in seconds) to blend from StartLocation -&gt; TargetActor+Offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="74" column="11" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1aaecfbda766d799e1f59053e6acaacbd3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float AOrbitSpectatorPawn::ElapsedTime</definition>
        <argsstring></argsstring>
        <name>ElapsedTime</name>
        <qualifiedname>AOrbitSpectatorPawn::ElapsedTime</qualifiedname>
        <initializer>= 0.0f</initializer>
        <briefdescription>
<para>Accumulated time (in seconds) since blending began. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="77" column="11" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AOrbitSpectatorPawn::bRightClickDown</definition>
        <argsstring></argsstring>
        <name>bRightClickDown</name>
        <qualifiedname>AOrbitSpectatorPawn::bRightClickDown</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>True while right-mouse is held for free-look. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="80" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1a9d1fd76358ac9c797677b01fb056ae07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AOrbitSpectatorPawn::AOrbitSpectatorPawn</definition>
        <argsstring>()</argsstring>
        <name>AOrbitSpectatorPawn</name>
        <qualifiedname>AOrbitSpectatorPawn::AOrbitSpectatorPawn</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Enables ticking every frame. Sets up SpringArm and Camera components. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="33" column="5" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="10" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1a042f83ca27a30c6510b1905153132a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::InitializeSpectator</definition>
        <argsstring>(AActor *KillerActor, FVector DeathLocation)</argsstring>
        <name>InitializeSpectator</name>
        <qualifiedname>AOrbitSpectatorPawn::InitializeSpectator</qualifiedname>
        <param>
          <type>AActor *</type>
          <declname>KillerActor</declname>
        </param>
        <param>
          <type>FVector</type>
          <declname>DeathLocation</declname>
        </param>
        <briefdescription>
<para>Sets up the pawn after spawn. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>KillerActor</parametername>
</parameternamelist>
<parameterdescription>
<para>Actor that killed the player (stored in <ref refid="class_a_orbit_spectator_pawn_1a24c5e1186db9f8e8e7bf60993ea45405" kindref="member">TargetActor</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DeathLocation</parametername>
</parameternamelist>
<parameterdescription>
<para>World position where the player died (stored in <ref refid="class_a_orbit_spectator_pawn_1a553f1235c13d69a4dcdd5309e76c9b01" kindref="member">StartLocation</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="40" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="24" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1a6ff10f6847b2bfb48e9cee76f4c4ac38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::Tick</definition>
        <argsstring>(float DeltaSeconds) override</argsstring>
        <name>Tick</name>
        <qualifiedname>AOrbitSpectatorPawn::Tick</qualifiedname>
        <param>
          <type>float</type>
          <declname>DeltaSeconds</declname>
        </param>
        <briefdescription>
<para>Called each frame to update blend and look-at logic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeltaSeconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Time (in seconds) since the last <ref refid="class_a_orbit_spectator_pawn_1a6ff10f6847b2bfb48e9cee76f4c4ac38" kindref="member">Tick()</ref> call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="47" column="18" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="33" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1aa70faa76d9b9996c4416be65ede76ed7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::SetupPlayerInputComponent</definition>
        <argsstring>(UInputComponent *PlayerInputComponent) override</argsstring>
        <name>SetupPlayerInputComponent</name>
        <qualifiedname>AOrbitSpectatorPawn::SetupPlayerInputComponent</qualifiedname>
        <param>
          <type>UInputComponent *</type>
          <declname>PlayerInputComponent</declname>
        </param>
        <briefdescription>
<para>Binds input for free-look controls. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PlayerInputComponent</parametername>
</parameternamelist>
<parameterdescription>
<para>Input component to populate with axis/actions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="53" column="18" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1a6aca1b24b25674e136932f6f6e0893c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::OnRightClickPressed</definition>
        <argsstring>()</argsstring>
        <name>OnRightClickPressed</name>
        <qualifiedname>AOrbitSpectatorPawn::OnRightClickPressed</qualifiedname>
        <briefdescription>
<para>Called when the right mouse button is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Enables free-look mode by setting <ref refid="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" kindref="member">bRightClickDown</ref> = true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="86" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1adef65ae289cfb699b4ebd789ed685772" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::OnRightClickReleased</definition>
        <argsstring>()</argsstring>
        <name>OnRightClickReleased</name>
        <qualifiedname>AOrbitSpectatorPawn::OnRightClickReleased</qualifiedname>
        <briefdescription>
<para>Called when the right mouse button is released. </para>
        </briefdescription>
        <detaileddescription>
<para>Disables free-look mode by setting <ref refid="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" kindref="member">bRightClickDown</ref> = false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="92" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1a7f011c556cfa6b50321ea81b1de02508" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::Turn</definition>
        <argsstring>(float Val)</argsstring>
        <name>Turn</name>
        <qualifiedname>AOrbitSpectatorPawn::Turn</qualifiedname>
        <param>
          <type>float</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
<para>Horizontal look input handler; only active when <ref refid="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" kindref="member">bRightClickDown</ref> is true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Val</parametername>
</parameternamelist>
<parameterdescription>
<para>Yaw input value (degrees/frame). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="98" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_a_orbit_spectator_pawn_1aefbf372b355599d61fedb37802625440" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AOrbitSpectatorPawn::LookUp</definition>
        <argsstring>(float Val)</argsstring>
        <name>LookUp</name>
        <qualifiedname>AOrbitSpectatorPawn::LookUp</qualifiedname>
        <param>
          <type>float</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
<para>Vertical look input handler; only active when <ref refid="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" kindref="member">bRightClickDown</ref> is true. </para>
        </briefdescription>
        <detaileddescription>
<para>Clamps pitch between -80 and +80 degrees. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pitch input value (degrees/frame). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="105" column="10" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.cpp" bodystart="82" bodyend="90"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pawn that smoothly orbits around the actor that killed the player. </para>
    </briefdescription>
    <detaileddescription>
<para>On spawn, this pawn is initialized via <ref refid="class_a_orbit_spectator_pawn_1a042f83ca27a30c6510b1905153132a6b" kindref="member">InitializeSpectator()</ref> with the <ref refid="class_a_orbit_spectator_pawn_1a24c5e1186db9f8e8e7bf60993ea45405" kindref="member">TargetActor</ref> (the killer) and <ref refid="class_a_orbit_spectator_pawn_1a553f1235c13d69a4dcdd5309e76c9b01" kindref="member">StartLocation</ref> (death spot). It then blends over <ref refid="class_a_orbit_spectator_pawn_1a693da49425407f0e913d7e094cbaddba" kindref="member">BlendTime</ref> seconds from the death spot toward the killer&apos;s location plus <ref refid="class_a_orbit_spectator_pawn_1ab3ef177c965bc7ce3b40b92805eb2ab3" kindref="member">TargetOffset</ref>. While blending finishes, it will automatically look at the killer unless free-look is engaged via <ref refid="class_a_orbit_spectator_pawn_1a6aca1b24b25674e136932f6f6e0893c7" kindref="member">/OnRightClickReleased</ref>(). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>AOrbitSpectatorPawn</label>
        <link refid="class_a_orbit_spectator_pawn"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ASpectatorPawn</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>AOrbitSpectatorPawn</label>
        <link refid="class_a_orbit_spectator_pawn"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ASpectatorPawn</label>
      </node>
    </collaborationgraph>
    <location file="Source/TimeAssassin/OrbitSpectatorPawn.h" line="24" column="1" bodyfile="Source/TimeAssassin/OrbitSpectatorPawn.h" bodystart="25" bodyend="106"/>
    <listofallmembers>
      <member refid="class_a_orbit_spectator_pawn_1a9d1fd76358ac9c797677b01fb056ae07" prot="public" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>AOrbitSpectatorPawn</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a693da49425407f0e913d7e094cbaddba" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>BlendTime</name></member>
      <member refid="class_a_orbit_spectator_pawn_1ac797da67ea2d26ca211fbe0972572d07" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>bRightClickDown</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a4929761058f42c30fa07d8605d2be012" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>Camera</name></member>
      <member refid="class_a_orbit_spectator_pawn_1aaecfbda766d799e1f59053e6acaacbd3" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>ElapsedTime</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a042f83ca27a30c6510b1905153132a6b" prot="public" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>InitializeSpectator</name></member>
      <member refid="class_a_orbit_spectator_pawn_1aefbf372b355599d61fedb37802625440" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>LookUp</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a6aca1b24b25674e136932f6f6e0893c7" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>OnRightClickPressed</name></member>
      <member refid="class_a_orbit_spectator_pawn_1adef65ae289cfb699b4ebd789ed685772" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>OnRightClickReleased</name></member>
      <member refid="class_a_orbit_spectator_pawn_1aa70faa76d9b9996c4416be65ede76ed7" prot="protected" virt="virtual"><scope>AOrbitSpectatorPawn</scope><name>SetupPlayerInputComponent</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a4472908b71b396733bbda86b38918097" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>SpringArm</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a553f1235c13d69a4dcdd5309e76c9b01" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>StartLocation</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a24c5e1186db9f8e8e7bf60993ea45405" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>TargetActor</name></member>
      <member refid="class_a_orbit_spectator_pawn_1ab3ef177c965bc7ce3b40b92805eb2ab3" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>TargetOffset</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a6ff10f6847b2bfb48e9cee76f4c4ac38" prot="protected" virt="virtual"><scope>AOrbitSpectatorPawn</scope><name>Tick</name></member>
      <member refid="class_a_orbit_spectator_pawn_1a7f011c556cfa6b50321ea81b1de02508" prot="private" virt="non-virtual"><scope>AOrbitSpectatorPawn</scope><name>Turn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
